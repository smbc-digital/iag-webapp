@inject ViewHelpers viewHelper
@model EventCalendar
@{
    DateTime previousEnteredDate = DateTime.MinValue;
    bool hasEvents = Model.Events.Any();
    string eventsTitle = (string)ViewData["eventsTitle"] ?? string.Empty;
}


<div class="grid-container-full-width" style="background-color:#f2f2f2;" data-cy="article">
    <div class="grid-container">
        <div class="grid-100">
            @if (!hasEvents)
            {
                <div class="no-results">
                    <h2>There are currently no events matching your search.</h2>
                    @if (Model.DateFrom.HasValue && Model.DateTo.HasValue && Model.DateFrom > Model.DateTo)
                    {
                        <p>This is because you searched for an invalid date range.</p>
                    }

                    <p>Please edit your search and try again.</p>
                </div>
            }
            else
            {
                <div class="event-cards-wrapper">
                    @foreach (Event eventItem in Model.Events)
                    {
                        bool isSameDate = previousEnteredDate.Equals(eventItem.EventDate);

                        <div class="event-card @(!isSameDate ? "new-date" : "")">
                            <div class="event-date @(isSameDate ? "event-same-date" : string.Empty)">
                                @if (!isSameDate)
                                {
                                    @viewHelper.FormatEventDate(eventItem.EventDate)
                                }
                            </div>

                            <partial name="EventCard2" model='eventItem' />
                        </div>

                        previousEnteredDate = eventItem.EventDate.Date;
                    }
                </div>

                <partial name="Pagination" model='Model.Pagination' />
            }
        </div>
    </div>
</div>
