@{
    Layout = "../Shared/_LayoutError.cshtml";
}

<main class="grid-container">
    <div class="l-container-square l-body-container l-body-container-pushed l-body-container-mobile">
        <div tabindex="-1" id="content" class="error-page cludo-error-page">
            <h1>Page not found</h1>
            <div class="page-description" itemprop="description">
                <span class="error-page-icon" aria-hidden="true">i</span>
                <h2 class="hero">Sorry, the page you were looking for has either moved or is no longer available.</h2>
                <p id="homepage-link" class="invisible"><a href="/">Go back to the homepage</a></p>
            </div>

            <!--[if lte IE 9]>
    <script src="https://api.cludo.com/scripts/xdomain.js" slave="https://api.cludo.com/proxy.html">
    <![endif]-->
            <script id="cludo-404-script" data-cid="112" data-eid="1144">
                (function () {
                    var s = document.createElement('script');
                    s.type = 'text/javascript';
                    s.async = true;
                    s.src = 'https://customer.cludo.com/scripts/404/cludo-404.js';
                    var x = document.getElementsByTagName('script')[0];
                    x.parentNode.insertBefore(s, x);
                })();
            </script>
            <script type="text/javascript">
                (function () {
                    const target = document.querySelector('#content');
                    const config = { attributes: true, childList: true, subtree: true };
                    const observerCallback = function (mutationsList, observer) {
                        const cludoModule = document.querySelector('#cludo-404');

                        for (const mutation of mutationsList) {
                            if (mutation.type === 'attributes' && cludoModule != null && cludoModule.classList.contains("loaded")) {
                                observer.disconnect();

                                if (cludoModule.classList.contains("hide-module"))
                                    document.querySelector("#homepage-link").classList.remove("invisible");
                            }
                        }
                    }

                    const observer = new MutationObserver(observerCallback);
                    observer.observe(target, config);
                })();
            </script>
        </div>
    </div>
</main>