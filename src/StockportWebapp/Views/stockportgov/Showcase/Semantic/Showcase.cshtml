@using StockportWebapp.ProcessedModels
@using StockportWebapp.ViewModels
@using StockportWebapp.FeatureToggling
@using StockportWebapp.Models
@using StockportWebapp.Utils

@inject FeatureToggles FeatureToggles
@inject ICookiesHelper CookiesHelper

@model ProcessedShowcase
@{
    ViewData["Title"] = Model.Title;
    ViewData["FullWidth"] = "full-width";
    ViewData["additionalClass"] = "showcase";
    ViewData["og:title"] = Model.Title;
    ViewData["Description"] = Model.Teaser;
    ViewData["Slug"] = Model.Slug;
    Layout = "../../Shared/_LayoutSemantic.cshtml";
    ViewData["EventsH2"] = true;
    ViewData["EventCategory"] = Model.EventCategory;
    ViewData["EventSubheading"] = Model.EventSubheading;
    var emailBanner = new EmailBannerViewModel(Model.EmailAlertsText, Model.EmailAlertsTopicId);
}
@section Breadcrumbs {
    <partial name="SemanticBreadcrumb" model='Model.Breadcrumbs' />
}

@if (Model.Alerts != null)
{
    var alertCookies = CookiesHelper.GetCookies<Alert>("alerts");
    if (alertCookies != null && alertCookies.Count() != Model.Alerts.Count())
    {
        <div class="center-wrapper margin-top-20">
            @foreach (var alert in Model.Alerts)
            {
                if (!alertCookies.Contains(alert.Slug))
                {
                    <partial name="Semantic/GlobalAlert" model='alert' />
                }
            }
        </div>
    }
}

@foreach (var field in Model.FieldOrder.Items)
{
    switch (field)
    {
        case "Primary Items":
            <div class="full-width">
                <partial name="Semantic/Showcase/PrimaryItems" model='Model' />
            </div>
            break;

        case "Secondary Items":
            //TONOTDO: Please do not do this right away.
            break;

        case "Consultations":
            if (Model.Consultations.Any())
            {
                <div class="showcase-section background-off-white">
                    <div class="center-wrapper">
                        <partial name="Semantic/Showcase/Consultations" model='Model.Consultations' />
                    </div>
                </div>
            }
            break;

        case "Key Facts":
            if (Model.KeyFactsSection != null && Model.KeyFactsSection.Count != 0)
            {
                <div class="showcase-section">
                    <div class="center-wrapper">
                        <hr class="thick-divider" />
                        <vc:information-list type="KeyFacts" model="@Model.KeyFactsSection">
                        </vc:information-list>
                    </div>
                </div>
            }
            break;

        case "News":
            if (Model.NewsArticle != null)
            {
                <div class="showcase-section background-off-white">
                    <div class="center-wrapper">
                        <partial name="Semantic/Showcase/NewsArticle" model='Model' />
                    </div>
                </div>
            }
            break;

        case "Events":
            //TONOTDO: Please do not do this right away.
            break;

        case "Profile":
            if (Model.Profile != null)
            {
                <div class="showcase-section">
                    <div class=" showcase-profile showcase-news-events white">
                        <div class="grid-container">
                            <div class="grid-parent grid-100">
                                <vc:profile-inline withoutBody="@string.IsNullOrEmpty(Model.Profile.Body)" profile="@Model.Profile">
                                </vc:profile-inline>
                            </div>
                        </div>
                    </div>
                </div>
            }
            break;

        case "Social Media":
            //TONOTDO: Please do not do this right away.
            break;

        case "Body":
            if (!string.IsNullOrWhiteSpace(Model.Body) && !string.Equals("<p></p>\n", Model.Body))
            {
                <div class="showcase-section">
                    <div class="center-wrapper">
                        <partial name="Semantic/Showcase/Body" model='Model' />
                    </div>
                </div>
            }
            break;

        case "Did you know":
            if (Model.DidYouKnowSection != null && Model.DidYouKnowSection.Count > 0)
            {
                <div class="showcase-section">
                    <div class="center-wrapper">
                        <hr class="thick-divider" />
                        <vc:information-list type="DidYouKnow" model="@Model.DidYouKnowSection">
                        </vc:information-list>
                    </div>
                </div>
            }
            break;
    }
}


@if (!string.IsNullOrEmpty(Model.EmailAlertsText) && !(string.IsNullOrEmpty(Model.EmailAlertsTopicId)))
{
    <div class="showcase-section background-off-white">
        <div class="center-wrapper">
            <partial name="Semantic/EmailBanner" model="emailBanner" />
        </div>
    </div>
}

<script>
    require(['alerts'], function (alerts) {
        alerts.Init();
    });
</script>
