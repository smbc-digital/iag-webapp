@model DirectoryViewModel
@{
    ViewData["Title"] = Model.PageTitle;
    ViewData["BreadcrumbTitle"] = $"Results in { Model.Title }";
    ViewData["og:title"] = Model.Title;
    ViewData["Description"] = Model.MetaDescription;
    Layout = "../Shared/_Layout2023.cshtml";
    var dataCy = Model.SearchBranding.Equals("Stockport Local") ? "stockport-local-search-results" : "search-results";
}

<div class="grid-container-full-width background-grey" data-cy=@dataCy>
    <partial name="Breadcrumb2023" model='@Model.Breadcrumbs' />
    <partial name="DirectorySearch" model="new DirectorySearchViewModel(){ Slug = Model.ParentDirectory.Slug, Title = Model.ParentDirectory.Title, Branding=Model.ParentDirectory.SearchBranding, SearchTerm = Model.SearchTerm }" />

    <form asp-controller="Directory" method="get">
        <input type="hidden" asp-for="SearchTerm" id="persistedSearchTerm"/>
        <div class="grid-container">
            <div class="grid-100 directory-sub-title">
               <h1 data-cy="results-title">@Model.DisplayTitle</h1>
                <span>Showing <span class="bold">@Model.PaginationInfo.TotalEntries</span>@(
                    Model.PaginationInfo.TotalEntries.Equals(1) ? " result" : " results"
                    ) in <span class="bold">@Model.Title</span> @if (!string.IsNullOrEmpty(Model.SearchTerm)) { @("for ") <span class='bold'>"@Model.SearchTerm"</span> }</span>
            </div>
        </div>


        <div class="grid-container">
            <div class="grid-100">
                <div class="directory @(Model.ShowPagination ? string.Empty : "directory--margin-bottom")">
                    <div class="directory--30">
                        <partial name="DirectorySearchResultFilters" />
                    </div>

                    <div class="directory--70">
                        <h2 class="visuallyhidden">Results in @Model.Title</h2>
                    
                        <div class="directory__controls">
                            <div class="directory__sortBy navcard-all navcard--theme-grey-accent-all">
                                <label for="order-by">Sort by:</label>
                                <select asp-for="@Model.Order" asp-items="@(new SelectList(Model.OrderBy))" name="orderBy" id="order-by" autocomplete="off"></select>
                            </div>
                            <div class="directory__showMap">
                                <button type="button" id="showMap" class="btn btn--plain"><span class="fa-solid fa-location-dot"></span> Show on a map</button>
                                <button type="button" id="hideMap" class="btn btn--plain" style="display:none;"><span class="fa-solid fa-circle-xmark"></span> Hide map</button>
                            </div>
                        </div>
                        
                        <div>
                            <partial name="DirectoryResultsMap" />
                            <partial name="DirectorySearchResults" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <partial name="DirectoryPagination" model="@Model"/>
    </form>

    <partial name="DirectoryContentDisclaimer">
</div>

<script>
    require(['/assets/javascript/config-85499dd2.min.js'], function () {
        require(['directoryFilters'],
            function (directoryFilters) {
                directoryFilters.Init();
            }
        );
    });
</script>
<script type="text/javascript">
    window.onload = function () {
        var showMap = document.getElementById("showMap");
        var hideMap = document.getElementById("hideMap");
        var mapContainer = document.getElementById("map");
        var pins = document.getElementsByClassName("pin");

        showMap.onclick = function () {
            mapContainer.style.display = "block";
            hideMap.style.display = "inline-block";
            showMap.style.display = "none";
            SetPinVisibility("inline-block");
        }
        hideMap.onclick = function () {
            mapContainer.style.display = "none";
            showMap.style.display = "inline-block";
            hideMap.style.display = "none";
            SetPinVisibility("none");
        }

        function SetPinVisibility(value)
        {
            for (let i = 0; i < pins.length; i++) {
                pins[i].style.display = value;
            }
        }
    }
</script>