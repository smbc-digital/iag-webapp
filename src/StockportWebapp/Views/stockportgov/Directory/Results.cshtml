@model DirectoryViewModel
@{
    var directory = Model.Directory;
    ViewData["Title"] = directory.Title;
    ViewData["og:title"] = directory.Title;
    ViewData["Description"] = directory.MetaDescription;
    Layout = "../Shared/_Layout2023.cshtml";

    var borderGrey = " navcard-all navcard--theme-grey-accent-all";
}

<div class="grid-container-full-width background-grey" data-cy="search-results">
    <partial name="Breadcrumb2023" model='@Model.Breadcrumbs' />
    <form asp-controller="Directory" method="get">
        <div class="grid-container">
            <div class="grid-100 directory-sub-title">
                <h1>Results for @Model.Directory.Title</h1>
                <span>Showing <span class="bold">@Model.FilteredEntries.Count()</span>@(Model.FilteredEntries.Count().Equals(1) ? " result" : " results") in <span class="bold">@Model.Directory.Title</span></span>
            </div>
        </div>

        <div class="grid-container">
            <div class="grid-100">
                <div class="directory--30">
                    <div class="directory__sortBy @borderGrey">
                        <label for="order-by">Sort by:</label>
                        <select asp-for="@Model.Order" asp-items="@(new SelectList(Model.OrderBy))" name="orderBy" id="order-by" autocomplete="off"></select>

                    </div>
                </div>
            </div>
        </div>

        <div class="grid-container">
            <div class="grid-100">
                <div class="directory">
                    <div class="directory--30">
                        <section class="navcard-wrapper">
                            <div class="navcard navcard--white navcard--width-100 navcard--border navcard--no-padding-right-rtl">
                                <div class="navcard-content navcard-all navcard--theme-grey-accent-all navcard--radius-all">
                                    <div class="navcard-content--padding">
                                        <h2 class="h-ml h--no-top-margin">Filter your results</h2>
                                        <p>Choose one or more options to filter your results.</p>

                                        <div class="directory-results__filters">
                                            @if (Model.AllFilterThemes is not null && Model.AllFilterThemes.Any())
                                            {
                                                @foreach (var entry in Model.AllFilterThemes)
                                                {
                                                    <a href="javascript:void(0)" @(Model.AllFilterThemes.First() != entry ? "aria-expanded=false" : "aria-expanded=true") class="directory-results__collapsible">
                                                        <h3 id='directory-@entry.Title.ToLower().Replace(" ", "-")'>@entry.Title</h3>
                                                        <span class="directory-results__toggle @(Model.AllFilterThemes.First() != entry ? "closed" : string.Empty)"></span>
                                                    </a>

                                                    <div class="directory-filters__content" @(Model.AllFilterThemes.First() != entry ? "style=display:none;" : string.Empty) role="group" aria-labelledby='directory-@entry.Title.ToLower().Replace(" ", "-")'>
                                                        @foreach (var filter in entry.Filters)
                                                        {
                                                            <div class="directory__checkbox-container">
                                                                <input class="directory-filters__checkbox" type="checkbox" name="filters" value="@filter.Slug" id="@filter.Slug"
                                                                @(Model.AppliedFilters.Any(appliedFilter => appliedFilter.Slug == filter.Slug) ? "checked" : string.Empty)>

                                                                <label for="@filter.Slug" class="directory-filters__label">@filter.DisplayName</label>
                                                                <span class="directory-filters__count" aria-hidden="true">(@Model.FilterCounts.GetValueOrDefault(filter.Slug, 0))</span>

                                                                
                                                                <span class="visuallyhidden">
                                                                    @{ 
                                                                        var filterCount = Model.FilterCounts.GetValueOrDefault(filter.Slug, 0);
                                                                        var countValueForSR = filterCount.Equals(1) ? $"{filterCount} result" : $"{filterCount} results";
                                                                    }
                                                                    @countValueForSR</span>

                                                                <br>
                                                            </div>
                                                        }
                                                    </div>

                                                    <hr>
                                                }

                                                <button value="Apply filters" data-cy="apply-filters" class="btn btn--bold btn--full btn--margin-bottom btn--margin-top" type="submit">Apply filters</button>
                                            }
                                          
                                            <a href="@Url.Action("DirectoryResults", "Directory", new { slug = Model.Directory.Slug })" data-cy="clear-filters" class="btn btn--inverse btn--full btn--bold btn--black-text btn--border-grey">Clear filters</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>

                    <div class="directory--70">
                        <h2 class="visuallyhidden">Results in @Model.Directory.Title</h2>
                        <ul class="navcard-wrapper">
                            @foreach (var entry in Model.FilteredEntries)
                            {
                                <partial name="DirectorySearchResult" model=@(new DirectorySearchResultViewModel {DirectorySlug = Model.Slug, Entry = entry}) />
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <partial name="DirectoryContentDisclaimer">
</div>

<script>
    require(['/assets/javascript/config-13323b29.min.js'], function () {
        require(['directoryFilters'],
            function (directoryFilters) {
                directoryFilters.Init();
            }
        );
    });
</script>