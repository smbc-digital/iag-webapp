@model DirectoryViewModel
@{
    var directory = Model.Directory;
    var subdirectories = directory.SubDirectories;
    ViewData["Title"] = directory.Title;
    ViewData["og:title"] = directory.Title;
    ViewData["Description"] = directory.MetaDescription;
    Layout = "../Shared/_Layout2023.cshtml";

    bool displayIcon = subdirectories.All(item => !string.IsNullOrEmpty(item.Icon));
    var navcardNoPadding = displayIcon ? "navcard--no-padding-top" : string.Empty;
    var sectionNoMarginBottom = !string.IsNullOrEmpty(directory.EventBanner.Title) ? "section--no-margin" : string.Empty;

    var sectionMarginTop = "";
    var titleNoMarginBottom = "";

    if((!string.IsNullOrEmpty(directory.Body) && directory.CallToAction is not null) ||
        (string.IsNullOrEmpty(directory.Body) && directory.CallToAction is null) ||
        (!string.IsNullOrEmpty(directory.Body) && directory.CallToAction is null))
            sectionMarginTop = "section--margin-top";

    if((string.IsNullOrEmpty(directory.Body) && directory.CallToAction is not null) ||
        (string.IsNullOrEmpty(directory.Body) && directory.CallToAction is null))
            titleNoMarginBottom = "section__title--no-margin-bottom";
}

<partial name="GlobalAlerts" model='directory.Alerts' />

<div class="grid-container-full-width" style="background-color:white;" data-cy="directory-page">
    <partial name="Breadcrumb2023" model='@Model.Breadcrumbs' />

    <div class="grid-container">
        <div class="grid-100">
            <h1 class="directory__title--margin @titleNoMarginBottom">@directory.Title</h1>
            
            @if(!string.IsNullOrEmpty(directory.Body)) {
                <div class="directory-lead">@directory.Body</div>
            }
        </div>
    </div>

    <h2 class="visuallyhidden">Services in @Model.Directory.Title</h2>


    @if (directory.CallToAction is not null)
    {
        <partial name="CallToAction" model='directory.CallToAction' view-data='new ViewDataDictionary(ViewData) { { "AdditionalCssClass", "section--margin-top"  } }'/>
    }

    <section class="section @sectionMarginTop @sectionNoMarginBottom">
        <div class="grid-container">
            <div class="grid-100">
                <div class="section__content section__content--no-margin">
                    <ul class="navcard-wrapper navcard-wrapper--no-margin" data-cy="navcard">
                        @foreach (var subdirectory in subdirectories)
                        {
                            var colourScheme = directory.Title.Equals(Model.ParentDirectory.Title)
                                ? string.IsNullOrEmpty(subdirectory.ColourScheme) ? "teal" : subdirectory.ColourScheme.ToLower()
                                : string.IsNullOrEmpty(Model.FirstSubDirectory.ColourScheme) ? "teal" : Model.FirstSubDirectory.ColourScheme.ToLower();

                            <li class="navcard navcard--width-33 navcard--center navcard-all navcard--border-top-10 navcard--theme-@colourScheme navcard--theme-@colourScheme-all">
                                <a href=@Url.Action("Directory", "Directory", new { slug=$"{Model.Slug}/{subdirectory.Slug}" }) class="navcard__link">
                                    <div class="navcard__content">
                                        @if (!string.IsNullOrEmpty(subdirectory.Icon) && displayIcon)
                                        {
                                            <div class="navcard__icon">
                                                <span class="@subdirectory.Icon.ToLower()" aria-hidden="true"></span>
                                            </div>
                                        }

                                        <div class="navcard-content--padding @navcardNoPadding">
                                            <h3 class="navcard__title navcard__title--black">@subdirectory.Title</h3>
                                            <p class="navcard__teaser">@subdirectory.Teaser</p>
                                        </div>
                                    </div>
                                </a>
                            </li>
                        }

                        @if(!directory.Title.Equals(Model.ParentDirectory.Title))
                        {
                            var colourSchemeViewAll = subdirectories.Select(subdirectory => {
                                    var directoryToCheck = directory.Title.Equals(Model.ParentDirectory.Title) ? subdirectory : Model.FirstSubDirectory;
                                    return string.IsNullOrEmpty(directoryToCheck.ColourScheme) ? "teal" : directoryToCheck.ColourScheme.ToLower();
                                }).FirstOrDefault();
                            
                            <li class="navcard navcard--width-33 navcard--center navcard-all navcard--border-top-10 navcard--theme-@colourSchemeViewAll navcard--theme-@colourSchemeViewAll-all">
                                <a href=@Url.Action("DirectoryResults", "Directory", new { slug=$"{directory.Slug}" }) class="navcard__link">
                                    <div class="navcard__content">
                                        @if (displayIcon)
                                        {
                                            <div class="navcard__icon">
                                                <span class="fas fa-arrow-right" aria-hidden="true"></span>
                                            </div>
                                        }

                                        <div class="navcard-content--padding @navcardNoPadding">
                                            <h3 class="navcard__title navcard__title--black">View all services in @directory.Title</h3>
                                        </div>
                                    </div>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </section>

    @if (!string.IsNullOrEmpty(directory.EventBanner.Title)) 
    {
        <partial name="EventBanner" model='directory.EventBanner'/>
    }

    <partial name="DirectoryContentDisclaimer">
</div>