@using StockportWebapp.Enums
@using StockportWebapp.Models

@model Profile
@{
    ViewData["Title"] = Model.Title;
    ViewData["FullWidth"] = "full-width profile";
    var articleTitle = Model.Breadcrumbs.LastOrDefault() != null ? Model.Breadcrumbs.LastOrDefault().Title + " - " : string.Empty;
    ViewData["og:title"] = articleTitle + Model.Title;
    Layout = "../Shared/_LayoutSemantic.cshtml";
}

@section Breadcrumbs {
    <partial name="SemanticBreadcrumb" model='Model.Breadcrumbs' />
}

<article class="page-container">
    <h1 tabindex="-1">@ViewData["Title"]</h1>
    <p class="lead-paragraph">@Model.Subtitle</p>
    <hr class="thick-divider" />
    <section>
        @Html.Raw(Model.Body)
    </section>

    @foreach (var item in Model.FieldOrder.Items)
    {
        switch (item)
        {
            case "Button":
                <partial name="Button" model='Model.Button' />
                break;
            @*case "Events Banner":
                <div class="showcase-section">
                    <partial name="Events/Semantic/EventBanner" model='Model.EventsBanner' />
                </div>
                break;*@
            case "Trivia":
                if (Model.TriviaSection?.Count() > 0)
                {
                    <hr class="thick-divider" />
                    @await Component.InvokeAsync("InformationList", new
                    {
                        model = Model.TriviaSection,
                        heading = Model.TriviaSubheading
                    })
                }
                break;
        }
    }

</article>

<div class="banner-section">
    <section>
        <partial name="Events/Semantic/EventBanner" model='Model.EventsBanner'/>
    </section>
</div>

