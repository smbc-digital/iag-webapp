@model StockportWebapp.ViewModels.ArticleViewModel
@{
    ViewData["Title"] = Model.Article.Title;
    ViewData["Description"] = Model.Article.Teaser;
    Layout = "../Shared/_Layout.cshtml";
}

@section Breadcrumbs {
    @Html.Partial("Breadcrumb", Model.Article.Breadcrumbs)
}

<div class="grid-container-full-width">
    <div class="grid-container grid-100">
        <div id="uitest-page-has-loaded" class="pull-right l-body-section-filled @(Model.HasParentTopicWithSubItems()
                                                                  ? "mobile-grid-100 tablet-grid-100 grid-70"
                                                                  : "mobile-grid-100 tablet-grid-100 grid-100")">
            <section class="grid-100 mobile-grid-100 ">
                <div class="l-content-container">
                    @{
                        if (Model.Article.Alerts != null)
                        {
                            foreach (var alert in Model.Article.Alerts)
                            {
                                @Html.Partial("DisplayTemplates/Alert", alert)
                            }
                        }
                    }
                    <div class="grid-100">
                        <h1>@Model.Article.Title</h1>

                        @if (Model.ShouldShowArticleSummary)
                        {
                            <article>
                                @Html.Raw(Model.Article.Body)
                            </article>
                        }

                        @if (Model.DisplayedSection != null)
                        {
                            @Html.Partial("../Shared/Section-Nav")
                            @Html.Partial("../Shared/Article-Single-Section", Model)
                            @Html.Partial("DisplayTemplates/Section-Pagination")
                        }
                    </div>
                </div>
            </section>
        </div>
        @{
            if (Model.HasParentTopicWithSubItems())
            {
                <div class="l-left-side-bar grid-30 tablet-grid-100 mobile-grid-100 grid-parent">
                    <div class="l-left-side-bar-section">
                        <h3>@Model.Article.ParentTopic.Name</h3>
                        <ul>
                            @foreach (var item in Model.SidebarSubItems())
                            {
                                <li class="@(item.NavigationLink == Model.Article.NavigationLink ? "active" : "")">
                                    <a href="@item.NavigationLink">@item.Title</a>
                                </li>
                            }
                            @if (Model.HasSecondaryOrTertiarySubItems())
                            {
                                <li>
                                    <a href="@Url.Action("Index", "Topic", new {topicSlug = Model.Article.ParentTopic.Slug})">
                                        <b>More</b>
                                    </a>
                                </li>
                            }
                            
                        </ul>
                    </div>
                    @await Component.InvokeAsync("LiveChat")
                </div>
            }
        }
    </div>
</div>