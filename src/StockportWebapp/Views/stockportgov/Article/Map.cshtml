@model Tuple<string, string, string>

<!DOCTYPE html>
<html lang="en-GB" class="no-js">
<head>

    <link type="text/css" href="//maps.stockport.gov.uk/css/jQuery/jquery.core.css" rel="stylesheet">
    <link type="text/css" href="//maps.stockport.gov.uk/css/jQuery/jquery.autocomplete.css" rel="stylesheet">
    <link type="text/css" href="//maps.stockport.gov.uk/css/jQuery/astun/ui.all.css" rel="stylesheet">
    <link type="text/css" href="//maps.stockport.gov.uk/css/Map_base.css" rel="stylesheet">
    <link type="text/css" href="//maps.stockport.gov.uk/css/responsive/normalize.css" rel="stylesheet">
    <link type="text/css" href="//maps.stockport.gov.uk/css/responsive/responsive.css" rel="stylesheet">
    <link type="text/css" href="//maps.stockport.gov.uk/custom.smbc/css/stockport.min.css" rel="stylesheet">

    <script type="text/javascript" src="//maps.stockport.gov.uk/js/responsivedesign.js"></script>
    <script type="text/javascript" src="//maps.stockport.gov.uk/custom.smbc/js/jquery-1.10.1.js"></script>
    <script type="text/javascript" src="//maps.stockport.gov.uk/custom.smbc/js/jquery-ui.js"></script>
    <link rel="stylesheet" href="~/assets/stylesheets/site-sg.min.css" />

    <script type="text/javascript">
        if (!window.astun) { window.astun = {}; }
        if (!window.astun.settings) { window.astun.settings = {}; }
        window.astun.settings.addressSearch = {
            'showRecordsCount': true
        }
        window.astun.settings.mapOptions = {};
        window.astun.settings.mapOptions.showSearchResultsUnderMap = true;
        var responsiveDesign = new astun.ResponsiveDesign(240);
    </script>
    <script type="text/javascript" src="//maps.stockport.gov.uk/js/lib/prototype-1.6.0.3.js"></script>
    <script type="text/javascript" src="//maps.stockport.gov.uk/FileIncluderJS.aspx?language="></script>
</head>

<body>
    <form name="atMapSpurForm" method="post" action="myhouse.aspx" id="atMapSpurForm" class="astunContainer atJSEnabled">
        <div id="atButtonBar"><input type="submit" name="atButtonBar$btnOtherThings" value="Show side panel" id="atButtonBar_btnOtherThings" class="ui-state-default ui-corner-all" /><input type="submit" name="atButtonBar$btnResetPage" value="Reset" id="atButtonBar_btnResetPage" class="ui-state-default ui-corner-all" /></div>
        <div id="atMyMaps" class="atModule atVersion2">
            <div id="atContent" class="atMapContent">
                <div class="atPanelContainer">
                    <div class="atPanelContent" id="atMap" style="padding:0">
                        <div id="atInitialLoader" class="ui-state-default" style=" margin:180px auto auto;width: 75px; background: none repeat scroll 0% 0% rgb(255, 255, 255); z-index: 800; text-align: center; padding: 10px; border-width: 5px; -moz-border-radius: 15px 15px 15px 15px; -moz-box-shadow: 5px 5px 3px rgb(129, 129, 129); display: block;">
                            <img src="//maps.stockport.gov.uk/images/stopwatch.gif" id="atMapTimer" style="float:none" alt="stopwatch" />
                            <span>
                                <br><span style="display:block; padding-top:7px">Loading...</span>
                            </span>
                            <div style="clear: both"></div>
                            <div id="atPanelResults" style="display: none; padding: 5px; margin-top: 10px; font-size: 80%" class="ui-state-default ui-corner-all">
                                <h3 style="margin: 5px">Map Information:</h3>
                                <div id="atResults">Results</div>
                            </div>
                        </div>
                    </div>
                </div> <!-- .atPanelContainer -->
            </div> <!-- #atContent -->
        </div> <!-- #atMyMaps -->
    </form>

    <script type="text/javascript">
        Event.observe(window, 'load', function () {
            pageType = $('atMap') ? 'isharemaps.mymaps' : 'isharemaps.simple';
            Astun.JS.IncludeJS(pageType, function () {
                atMyCouncil();
                if ($('atMap')) {
                    loadMap();
                }
                if (astun && astun.customJS && typeof astun.customJS == "function") {
                    astun.customJS();
                }
            });
        });

        function atMyCouncil() {
            if (!window.astun) {
                window.astun = {};
                astun = window.astun;
            }
            if (!astun.settings) {
                astun.settings = {};
            }

            astun.settings.themeName = astun.settings.themeName || 'base';
            astun.settings.popupDelay = astun.settings.popupDelay || 500;

            if (!astun.mypages) astun.mypages = {};
            astun.mypages.eventElement = $('atMapSpurForm');

            if (jQuery('#atMyNearest').length > 0) jQuery('.atPanelContainer').panelsaccordion();

            //My Alerts accordion
            if (jQuery('#atMyAlerts').length > 0) jQuery('#atMyAlertsLocationBased .atPanelContent:first').myalertsaccordion();

            //Address finder
            var addressfinder = new Astun.JS.GetData.AddressFinder(astun.mypages.eventElement, '//maps.stockport.gov.uk/getdata.aspx');
            jQuery('#atLocationBar').addresssearch("", "", "", { addressBarSearch: true });

            //On Pagereset button click, delete the cookies first - bug 1932
            jQuery('#atButtonBar_btnResetPage').click(Astun.JS.Common.clearAstunCookies);
        }

        function loadMap() {
            var loader = {};
            if (!window.astun.settings.mapOptions) {
                window.astun.settings.mapOptions = {};
            }
            loader.mapID = 'atMap';

            function isSmallWindow() {
                return jQuery(window).width() < 740;
            }

            function panelShown() {
                var right = jQuery('.atMainJQWrapper').css('right');
                return right == 'auto' || parseInt(right, 10) == 0;
            }

            function dialogOpen() {
                return (jQuery('.ui-dialog.map-panel').children().length > 1)
            }

            // Hide the side panel by default on small screens
            if (isSmallWindow()) {
                jQuery.fn.panelswrapper.defaults.hideInStart = true;
            }

            function openDialog() {
                // If the user has changed map source there will be
                // an additional empty div.atPanelInnerWrapper which
                // we need to remove
                jQuery('.atPanelInnerWrapper:empty').remove();

                // Ensure the dialog is destroyed first, without destroying
                // it the content can be missing if the content has been shown
                // as a side panel before the user resized the window to cause
                // it to be displayed in a dialog
                jQuery('.atPanelInnerWrapper').dialog('destroy');

                var winH = jQuery(window).height();
                var winW = jQuery(window).width();

                // Determine the dimensions of the dialog to suit the window
                var maxHeight = 600;
                var maxWidth = 800; //400
                var minPadding = 10;
                var height = winH - (2 * minPadding);
                var width = winW - (2 * minPadding);
                height = (height > maxHeight) ? maxHeight : height;
                width = (width > maxWidth) ? maxWidth : width;

                // Position the dialog
                var top = (winH - height) / 2;
                var left = (winW - width) / 2;

                var d = jQuery('.atPanelInnerWrapper').dialog({
                    title: "Menu",
                    appendTo: "#atMyMaps",
                    height: height,
                    width: width,
                    modal: true,
                    resizable: false,
                    draggable: false,
                    dialogClass: "map-panel",
                    open: function () {
                        // Close the dialog if the user clicks on the overlay
                        // which makes it modal
                        jQuery('.ui-widget-overlay').bind('click', function () {
                            closeDialog();
                        })
                    },
                    close: function () {
                        jQuery('.atPanelInnerWrapper')
                            .removeClass('ui-dialog-content')
                            .appendTo(jQuery('.atOuterWpr.noTB'));
                    }
                }).dialog('widget');

                d.css('position', 'fixed').css('top', top + 'px').css('left', left + 'px');
            }

            function closeDialog() {
                jQuery('a.ui-dialog-titlebar-close').click();
            }

            Event.observe($(loader.mapID), 'astun:sourceLoad', function (evt) {
                var allowedPanels = 0; //'@Model.Item2';

                var panels = [];

                if (allowedPanels.indexOf('Address') >= 0) {
                    panels.push(
                    {
                        cssClass: 'atPanelSearch',
                        title: 'Address Search',
                        pluginName: 'addresssearch',
                        pluginData: evt,
                        pluginOpts: { collapseInStart: true }
                    });
                }

                if (allowedPanels.indexOf('TakeMeTo') >= 0) {
                    panels.push(
                    {
                        cssClass: 'atTakeMeTo',
                        title: 'Take Me To',
                        pluginName: 'takemeto',
                        pluginData: evt,
                        pluginOpts: { collapseInStart: true }
                    });
                }

                if (allowedPanels.indexOf('Categories') >= 0) {
                    panels.push(
                    {
                        cssClass: 'atShowmapCategories',
                        title: 'Show Map Categories',
                        pluginName: 'showmapcategories',
                        pluginData: evt,
                        pluginOpts: { collapseInStart: true }
                    });
                }

                //Options to pass to the function
                var options = {
                    panelWrapperTopPosition: 1,
                    attachPanelWrapperTo: '#' + loader.mapID
                };

                //Call the function which will start all jQuery plugins having these options
                jqueryFunctions(jQuery, jQuery('#' + loader.mapID), panels, options);

                //On map page toggle the panel wrapper if user click 'other things that may interest you'
                jQuery('#atButtonBar_btnOtherThings').live('click', function () {
                    jQuery('#' + loader.mapID).trigger('togglePanelWrapper');
                    return false;
                });

                // Attempt to ensure the popup is not obscured by base map buttons
                astun.mapWrapper.map.paddingForPopups.right = 120;

                // Remove the PanZoomBar control, we will add a set of plain
                // links which work reliably on all devices
                astun.mapWrapper.map.removeControl(
                    jQuery.grep(astun.mapWrapper.map.controls, function (control, idx) {
                        return control.displayClass == 'olControlPanZoomBar'
                    })[0]
                );

                jQuery('.atJqOpenClose').hide();


                function fixPanelPosition() {
                    // Ensure the vertical positon of the panel is correct
                    jQuery('.atPanelWrapperParent').css('top', Math.round(jQuery('#atMap').offset().top));
                }

                var appendTo = isSmallWindow() ? '.atPanelContent.olMap' : '.olMapViewport';
                // New bolder menu toggle button
                jQuery('<div id="atPanelToggle" class="atPanelToggle"><a href="#" title="Menu">&nbsp;</a></div>').appendTo(appendTo).click(function () {
                    if (isSmallWindow()) {
                        openDialog();
                    } else {
                        fixPanelPosition()
                        // Toggle the panel
                        jQuery('.atJqOpenClose').click();
                    }
                    return false;
                });

                fixPanelPosition();

                jQuery('<div id="atZoomControls" class="atZoomControls"><a href="#zoomin" class="zoomin" title="Zoom in">&nbsp;</a><a href="#zoomout" class="zoomout" title="Zoom out">&nbsp;</a></div>').appendTo(appendTo).click(function (e) {
                    if (e.target.hash === '#zoomin') {
                        astun.mapWrapper.map.zoomIn()
                    } else {
                        astun.mapWrapper.map.zoomOut()
                    }
                    return false;
                });

                var mapElm = $('atMap');

                // Close the dialog when a map source is choosen
                jQuery(mapElm).bind('loadMapSource', window, function (evt) {
                    if (dialogOpen()) {
                        closeDialog();
                    }
                });

                // Close dialog when a take me to link is clicked
                jQuery(mapElm).bind('mapMove', window, function (evt) {
                    if (dialogOpen()) {
                        closeDialog();
                    }
                });

                // Close dialog when search for or find nearest results are found
                Event.observe(mapElm, 'astun:resultsReceived', function (evt) {
                    if (evt.memo.html.toLowerCase().indexOf(Astun.lang.common.noResultsFound.toLowerCase()) === -1) {
                        if (dialogOpen()) {
                            closeDialog();
                        }
                    }
                });

                function windowSized() {
                    if (panelShown()/* && isSmallWindow()*/) {
                        // Close it
                        jQuery('.atJqOpenClose').click();
                    }
                }
            });
            //Start the map
            loader.map = new Astun.JS.Map(loader.mapID, { mapSource: '@Model.Item1', layers: '@Model.Item3' });


            //Initialize the address finder
            loader.addressFinder = new Astun.JS.GetData.AddressFinder(loader.map.mapElement, loader.map.dataurl);
        }
    </script>
</body>
</html>