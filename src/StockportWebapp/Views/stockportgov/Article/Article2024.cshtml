@model ArticleViewModel
@{
    ViewData["Title"] = Model.Article.Title;
    ViewData["Description"] = Model.MetaDescription;
    ViewData["og:title"] = Model.OgTitleMetaData;
    Layout = "../Shared/_Layout2023.cshtml";
    var dataCy = Model.DisplayedSection is null ? "flat-article" : "article-with-sections";
}

<div class="grid-container-full-width" style="background-color:white;">
    <partial name="Breadcrumb2023" model="Model.Article.Breadcrumbs" />

    <div class="grid-container">
        <div class="grid-100">
            <div class="article--70">
                <h1 class="directory__title">@Model.Article.Title</h1>
            </div>

            <section class="article">
                <div class="article--70 section">
                    @if(!string.IsNullOrEmpty(Model.Article.Image))
                    {
                        <div class="placeholder placeholder-bg-grey placeholder-small">
                            <h2 class="placeholder-article-header-description">Image</h2>
                        </div>
                    }
                    
                    @if(Model.Article.Sections is not null && Model.Article.Sections.Any())
                    {
                        @if (Model.DisplayedSection is not null)
                        {
                            <partial name="ArticleSections" />
                            @* <partial name="Article-Single-Section" model='Model' />
                            <partial name="DisplayTemplates/Section-Pagination" /> *@
                        }
                    }

                    @if(!string.IsNullOrEmpty(Model.Article.Body))
                    {
                        @Html.Raw(Model.Article.Body)
                    }

                    @if(!Model.HideLastUpdated)
                    {
                        <p class="article-date">
                            Last updated <partial name="FormattedDate" model='Model.Article.UpdatedAt' />
                        </p>
                    }

                    @* @if(Model.ShouldShowNextSectionButton() || Model.ShouldShowPreviousSectionButton())
                    {
                        <div class="placeholder placeholder-bg-grey placeholder__padded-top placeholder__padded-bottom" id="article-page-content">
                            <div class="grid-container">
                                <h2 class="placeholder-article-header-description">Pagination</h2>
                            </div>
                        </div>
                    } *@

                    @* <div class="placeholder placeholder-bg-orange placeholder__padded-top placeholder__padded-bottom placeholder-medium" id="article-page-content">
                        <div class="grid-container">
                            <h2 class="placeholder-article-header-description">Our partners</h2>
                        </div>
                    </div> *@
                </div>

                <div class="article--30 section">
                    @if (Model.Article.ParentTopic != null)
                    {
                        <partial name="ArticleNavCardList" model="@Model"/>
                    }
                </div>
            </section>
        </div>
    </div>
</div>