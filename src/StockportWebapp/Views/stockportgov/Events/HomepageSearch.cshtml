@inject ViewHelpers viewHelper
@model EventCalendar
@{
    DateTime previousEnteredDate = DateTime.MinValue;
}

<div class="grid-container" id="event-listing-container">
    <div class="grid-100 event-homepage__search">
        @if (!Model.Events.Any())
        {
            <div class="grid-container grid-100">
                <h1>There are currently no events matching your search.</h1>
                @if (Model.DateFrom.HasValue && Model.DateTo.HasValue && Model.DateFrom > Model.DateTo)
                {
                    <p>This is because you searched for an invalid date range.</p>
                }
                <p>Please edit your search and try again.</p>
            </div>
        }
        else
        {
            @foreach (Event eventItem in Model.Events)
            {
                if (!previousEnteredDate.Equals(eventItem.EventDate))
                {
                    if (!previousEnteredDate.Equals(DateTime.MinValue))
                        @Html.Raw("</ul></div>");

                    @Html.Raw("<div class='event-homepage__search-date'>");
                    <h2>@viewHelper.FormatEventDate(eventItem.EventDate)</h2>
                    @Html.Raw("<ul class='navcard-wrapper navcard-wrapper--no-margin'>");
                }

                <partial name="EventCard" model="eventItem" view-data="@(new ViewDataDictionary(ViewData) {{"backgroundColourClass", "event-cards__link--white"}})"/>
                previousEnteredDate = eventItem.EventDate.Date;
            }
            </div>

            <div class="grid-100">
                <partial name="Pagination2024" model='Model.Pagination'/>
            </div>
        }
</div>