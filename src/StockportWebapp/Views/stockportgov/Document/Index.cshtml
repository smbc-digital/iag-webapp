@model DocumentPageViewModel
@{
    ViewData["Title"] = Model.DocumentPage.Title;
    ViewData["Description"] = Model.MetaDescription;
    ViewData["og:title"] = Model.OgTitleMetaData;
    Layout = "../Shared/_Layout2023.cshtml";

    string multipleDocuments = Model.DocumentPage.MultipleDocuments
        ? "About these documents"
        : "About the document";
    
    string multipleDocumentsTitle = Model.DocumentPage.MultipleDocuments
        ? "Documents"
        : "Document";

    string datePublishedClass = Model.DisplayLastUpdated
        ? string.Empty
        : "document-page-date";
}

<div class="grid-container-full-width" style="background-color: white;" data-cy="document-page">
    <partial name="Breadcrumb2023" model='Model.DocumentPage.Breadcrumbs'/>
    
    <div class="grid-container">
        <div class="grid-100">
            <div class="article--70">
                <h1 class="article__title">@Model.DocumentPage.Title</h1>

                <section class="document-page">
                    <p class="lead">@multipleDocuments</p>

                    @Html.Raw(Model.DocumentPage.AboutTheDocument)

                    <h2>@multipleDocumentsTitle</h2>
                    @foreach (Document document in Model.DocumentPage.Documents)
                    {
                        <partial name="../Shared/Document2024" model='document' />
                    }

                    @Html.Raw(Model.DocumentPage.AwsDocuments)

                    @if (!string.IsNullOrEmpty(Model.DocumentPage.RequestAnAccessibleFormatContactInformation))
                    {
                        <hr/>

                        <h2>Request an accessible format</h2>
                        <p>If you use assistive technology (such as a screen reader) and need a version of this document in a more accessible format, please tell us what format you need.  You can:</p>
                        @Html.Raw(Model.DocumentPage.RequestAnAccessibleFormatContactInformation)
                    }

                    @if (!string.IsNullOrEmpty(Model.DocumentPage.FurtherInformation))
                    {
                        <h2>Further details</h2>
                        @Html.Raw(Model.DocumentPage.FurtherInformation)
                    }

                    @if (Model.DocumentPage.RelatedDocuments.Count() > 0)
                    {
                        <h2>Related documents</h2>
                        <ul>
                            @foreach (SubItem document in Model.DocumentPage.RelatedDocuments)
                            {
                                <li><a href="@document.NavigationLink">@document.Title</a></li>
                            }
                        </ul>
                    }

                    <p class="@datePublishedClass">
                        Date published: <strong>@Model.DocumentPage.DatePublished.ToString("d MMMM yyyy")</strong>
                    </p>

                    @if(Model.DisplayLastUpdated)
                    {
                        <p class="document-page-date">
                            Last updated: <strong>@Model.DocumentPage.LastUpdated.ToString("d MMMM yyyy")</strong>
                        </p>
                    }
                </section>
            </div>
        </div>
    </div>
</div>