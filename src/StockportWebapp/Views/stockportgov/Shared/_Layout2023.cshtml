@*
    Articles, A to Z, Contact us area, Directories, Documents, Events,
    Landing pages, Payments, Privacy notice, Profiles, Start pages, Topics
*@
@using StockportWebapp.Models.Config
@inject IApplicationConfiguration ApplicationConfiguration
@inject BusinessId BusinessId
@{
    StylesheetsConfiguration stylesheet = ApplicationConfiguration.GetStylesheetConfig();
    bool usePreview = bool.TryParse(ApplicationConfiguration.GetContentfulUsePreview(), out var preview) && preview;
}

<!DOCTYPE html>
<html lang=en-GB>
    <head>
        <meta charset=utf-8 />
        <meta name=viewport content="width=device-width, initial-scale=1" />
        <title>@ViewData["Title"] - Stockport Council</title>
        <meta name=description content='@ViewData["Description"]' />
        <meta property=og:title content='@ViewData["og:title"]' />

        <partial name=OwnershipVerificationCodes />
        <partial name=Favicon />
        <partial name=NoScriptStyles />

        @if (ViewData["CanonicalUrl"] is not null)
        {
            <partial name=CanonicalUrl />
        }

        @* PACKAGE / VENDOR STYLESHEETS *@
        <link rel=stylesheet href=~/assets/stylesheets/cludo-search-default.min.css asp-append-version=true />
        <link rel=stylesheet href=https://customer.cludo.com/css/templates/v2.1/essentials/cludo-search.min.css asp-append-version=true />
        <link rel=preload as=style onload="this.onload=null;this.rel='stylesheet'" href=~/assets/stylesheets/vendor/unsemantic-grid-responsive-tablet.min.css asp-append-version=true />
        
        @* MAIN STYLESHEET(S) *@
        <link rel=stylesheet href=~/assets/stylesheets/site-sg-overrides.min.css asp-append-version=true />
        <link rel=preload as=style onload="this.onload=null;this.rel='stylesheet'" href="https://fonts.googleapis.com/css?family=Noto+Sans:400,700&display=swap">
        <link rel=preload as=style onload="this.onload=null;this.rel='stylesheet'" href="https://fonts.googleapis.com/css2?family=Lexend:wght@100..900&display=swap">

        <link rel=alternate type=application/rss+xml href=/news/rss title="Stockport Council News Feed" />
        <link rel=alternate type=application/rss+xml href=/events/rss title="Stockport Council Events Feed" />

        <link href="https://kit.fontawesome.com/d14fbc06e0.js" rel=preload as=script>
        <script src="https://kit.fontawesome.com/d14fbc06e0.js" crossorigin="anonymous"></script>

        <noscript>
            <link rel=stylesheet href="https://kit.fontawesome.com/d14fbc06e0.css" crossorigin="anonymous">

            <style>
                .directory__map-container {
                    display: none;
                }

                .js-only {
                    display: none;
                }
            </style>
        </noscript>

        <script type=text/javascript src=~/assets/javascript/vendor/require.min.js asp-append-version=true></script>
    </head>

    <body class='container-layout-free @(string.Concat("type-", ViewContext.RouteData.Values["controller"].ToString().ToLower())) background-grey directory-no-header-search'>
        <partial name=CookieNotice />
        <partial name=TagManager/TagManagerDataLayer />
        <partial name=TagManager/TagManager />
        <partial name=TagManager/TagManagerNoScript />

        <div id="__ba_launchpad"></div>
        @if(ViewContext.RouteData.Values["controller"].ToString().ToLower().Equals("directory")) {
            <partial name=Header2023 model=false />
        }
        else {
            <partial name=Header2023 model=true />
        }

        @RenderSection("Breadcrumbs", false)
        <main id="content">
            @RenderBody()
        </main>

        @if (usePreview)
        {
            @Html.Raw(@"
                <script type=""module"">
                    import { ContentfulLivePreview } from 'https://cdn.jsdelivr.net/npm/@contentful/live-preview@4.6.39/dist/index.js';

                    ContentfulLivePreview.init({
                        locale: 'en-GB',
                        debugMode: true,
                        enableInspectorMode: true,
                        enableLiveUpdates: true,
                        targetOrigin: 'https://app.contentful.com'
                    });

                    function updateDomFromEntry(entry, locale = 'en-GB') {
                        const entryId = entry?.sys?.id;
                        const container = document.querySelector(`[data-contentful-entry-id='${entryId}']`);
                        if (!container || !entry.fields) return;

                        Object.entries(entry.fields).forEach(([fieldName, fieldValueByLocale]) => {
                            const fieldValue = fieldValueByLocale?.[locale] ?? fieldValueByLocale?.['en-US'] ?? null;
                            if (fieldValue === null) return;

                            const target = container.querySelector(`[data-contentful-field='${fieldName}']`);
                            if (!target) return;

                            if (target.tagName === 'IMG') {
                                // Handle image asset
                                const imageUrl = fieldValue?.fields?.file?.url;
                                if (imageUrl) target.src = imageUrl;
                            } else {
                                target.textContent = fieldValue;
                            }
                        });
                    }

                    ContentfulLivePreview.subscribe({
                        locale: 'en-GB',
                        callback: (updatedEntry) => {
                            console.log('Live update received:', updatedEntry);
                            console.log('Full entry structure:', JSON.stringify(updatedEntry, null, 2));
                            updateDomFromEntry(updatedEntry, 'en-GB');
                        }
                    });
                </script>
            ")
        }

        <distributed-cache name=footer2023 expires-after=@TimeSpan.FromMinutes(ApplicationConfiguration.GetFooterCache(BusinessId.ToString())) enabled=true>
            @await Component.InvokeAsync("Footer2023")
        </distributed-cache>
    </body>
</html>