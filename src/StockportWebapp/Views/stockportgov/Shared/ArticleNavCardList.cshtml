@model ArticleViewModel
@{
    var borderGrey = " navcard--border-left-1 navcard--border-right-1 navcard--theme-grey-accent-all";
    var liClasses = "navcard navcard--grey navcard--no-margin navcard--no-padding-right-rtl navcard--width-100";
    bool hasMoreButton;
}

<ul class="navcard navcard-wrapper--no-margin navcard--border-top-10 navcard--no-padding-right-rtl navcard--theme-teal-lighter-top navcard--width-100">
    <li class="@liClasses">
        <div class="@borderGrey">
            <div class="navcard--padding navcard--padding-top navcard--grey">
                <h2 class="h-m h--no-top-margin h--no-bottom-margin">Also in @Model.Article.ParentTopic.Name</h2>
            </div>
        </div>
    </li>

    @foreach (var item in Model.SidebarSubItems(out hasMoreButton))
    {
        if (!item.NavigationLink.Equals(Model.Article.NavigationLink))
        {
            <li class="@liClasses">
                <div class="@borderGrey">
                    <partial name="ArticleNavCard" model="item"/>
                </div>
            </li>
        }
    }

    @if (hasMoreButton)
    {
        <li class="@liClasses">
            <div class="@borderGrey navcard--border-bottom-1 navcard--radius-bottom-left navcard--radius-bottom-right">
                <partial name="ArticleNavCard" model='new SubItem(Model.Article.ParentTopic.Slug, Model.Article.ParentTopic.Name, Model.Article.ParentTopic.Teaser, Model.Article.ParentTopic.Icon, "topic", Model.Article.ParentTopic.Image, new List<SubItem>(), "teal")' view-data='new ViewDataDictionary(ViewData) {{"url", @Url.Action("Index", "Topic", new { topicSlug = Model.Article.ParentTopic.Slug })}, {"hasMoreButton", @hasMoreButton}}' />
            </div>
        </li>
    }
</ul>