@inject ICookiesHelper CookiesHelper
@model Alert
@{
    var alertCookies = CookiesHelper.GetCookies<Alert>("alerts");
    var isDismissed = alertCookies != null && alertCookies.Contains(Model.Slug) && !Model.IsStatic;
}

@if (!isDismissed)
{
    <div class="global-alert-@Model.Severity.ToLowerInvariant()">
        <div class="grid-container grid-100 global-alert-container">
            <div class="grid-100 mobile-grid-100 tablet-grid-100 global-alert grid-parent">
                <div class="hide-on-mobile hide-on-tablet global-alert-icon global-alert-icon-@Model.Severity.ToLowerInvariant()">
                    <i></i>
                </div>
                <div class="grid-80 mobile-grid-95 global-alert-text-container">
                    <div class="global-alert-text-@Model.Severity.ToLowerInvariant()">
                        <h3>@Model.Title</h3> @Html.Raw(Model.Body)
                    </div>
                </div>
                @if (!Model.IsStatic)
                {
                    <div class="global-alert-close-container">
                        <a href="javascript:void(0)" title="Close @Model.Title alert" aria-label="Close @Model.Title alert">
                            <div class="global-alert-close-@Model.Severity.ToLowerInvariant()">
                                <i class="close-alert" data-slug="@Model.Slug" data-parent="global-alert-@Model.Severity.ToLowerInvariant()"></i>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
}

<script>
    require(['/assets/javascript/config.min.js'], function() {
        require(['alerts.min'],
            function(alerts) {
                alerts.Init();
            }
        );
    });
</script>