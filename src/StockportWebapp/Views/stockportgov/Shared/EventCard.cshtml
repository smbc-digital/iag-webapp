@inject ViewHelpers ViewHelpers
@model Event

@if (Model is not null)
{
    string borderColourClass = (string)ViewData["BorderColourClass"] ?? string.Empty;
    string backgroundColourClass = (string)ViewData["BackgroundColourClass"] ?? string.Empty;

    <li class="navcard navcard--width-33 navcard event-cards">
        <a href="@(Url.Action("Detail", "Events", new {slug = Model.Slug, date = Model.EventDate.ToString("yyyy-MM-dd")}))" class="navcard__link event-cards__link @backgroundColourClass @borderColourClass" data-cy="event-card-link">
            <div class="navcard__content">
                <partial name="NavCardImage" model="@Model.ImageUrl" view-data='@(new ViewDataDictionary(ViewData) { {"imageAdditionalClasses", "event-cards__image"}})'/>

                <div class="event-cards--padding">
                    <h3 class="navcard__title">@Model.Title</h3>
                    <p class="navcard__teaser">start: <strong>@ViewHelpers.FormatEventDate(Model.EventDate, Model.StartTime)</strong></p>
                    <p class="navcard__teaser">end: <strong>@ViewHelpers.FormatEventDate(Model.EventDate, Model.EndTime)</strong></p>
                    @{
                        var ukZone = TimeZoneInfo.FindSystemTimeZoneById("Europe/London");
                        var now = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, ukZone);
                    }

                    <p class="navcard__teaser">current: <strong>@ViewHelpers.FormatEventDate(DateTime.Now.Date, now.ToString("HH:mm"))</strong></p>
                    <p class="navcard__teaser">@Model.Teaser</p>
                    <p class="navcard__teaser"><strong>@Model.Location</strong></p>
                </div>
            </div>
        </a>
    </li>
}