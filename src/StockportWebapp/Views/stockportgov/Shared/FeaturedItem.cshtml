@model SpotlightOnBanner

@{
    string additionalClasses = (string)ViewData["additionalClasses"];
    string pseudoBorderColour = (string)ViewData["pseudoBorderColour"];
    string borderColour = (string)ViewData["borderColour"];
    string altText = !string.IsNullOrEmpty(Model.AltText) ? Model.AltText : string.Empty;
}

<div class="featured-item section__content" data-cy="featured-item">
    <a href="@Model.Link" class="featured-item__link featured-item__link-@additionalClasses" data-cy="featured-item-link">
        <partial name="FeaturedItemImage" model="@Model.Image" view-data='@(new ViewDataDictionary(ViewData) { {"altText", altText} })'/>

        <div class="featured-item-content featured-item-content-@additionalClasses @pseudoBorderColour @borderColour">
            <div class="featured-item-wrapper featured-item-wrapper-@additionalClasses">
                <h3 class="featured-item__title featured-item__title--padded-bottom">@Model.Title</h3>
                <p class="featured-item-content__teaser featured-item-content__teaser-@additionalClasses">@Model.Teaser</p>
            </div>

            <div class="featured-item-content-last-updated"> 
                <partial name="FormattedDate" model='Model.LastUpdated' />
            </div>
        </div>
    </a>
</div>