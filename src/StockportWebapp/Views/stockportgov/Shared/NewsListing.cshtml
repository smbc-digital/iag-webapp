@using System.Threading.Tasks
@using StockportWebapp.ViewModels
@model NewsroomViewModel

@{
    var newsroom = Model.Newsroom;
}

<div class="grid-container news-grid-container-margins">
    <div class="grid-30 tablet-grid-100 mobile-grid-100 l-filters" id="news-filters">
        <p class="filters-heading">Refine by</p>
      
                <ul class="filters-list" id="displayRefineBy">
                    <li class="filters-active">
                        <ul>
                            @if (!string.IsNullOrEmpty(Model.Category))
                            {
                                <li class="filter collapsible"><a href="@Url.RouteUrl(Model.FilteredUrl.WithoutCategory())"><i class="fa fa-times" aria-hidden="true"></i> @Model.Category</a></li>
                            }
                            @if (Model.DateFrom.HasValue && Model.DateTo.HasValue && (Model.DateFrom <= Model.DateTo))
                            {
                                <li class="filter collapsible"><a href="@Url.RouteUrl(Model.FilteredUrl.WithoutDateFilter())"><i class="fa fa-times" aria-hidden="true"></i> @Model.GetActiveDateFilter()</a></li>
                            }
                            @if (!string.IsNullOrEmpty(Model.Tag))
                            {
                                <li class="filter collapsible"><a href="@Url.RouteUrl(Model.FilteredUrl.WithoutTagFilter())"><i class="fa fa-times" aria-hidden="true"></i> @Model.Tag</a></li>
                            }
                        </ul>
                    </li>
                    @if (Model.Categories.Any())
                    {
                        <li class="filter collapsible" id="category-filter">
                            <p class="filter-title">Category</p>
                            <ul class="filters-list">
                                <li class=@(Model.FilteredUrl.HasNoCategoryFilter() ? "active" : "")>
                                    <a href="@Url.RouteUrl(Model.FilteredUrl.WithoutCategory())">All categories</a>
                                </li>
                                @foreach (var category in Model.Categories)
                                {
                                    <li class=@(Model.CurrentUrl.MatchesQueryParam("Category", category) ? "active" : "")>
                                        <a href="@Url.RouteUrl(Model.FilteredUrl.AddCategoryFilter(category))">@category</a>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                    <li class="filter collapsible" id="news-archive">
                        <p class="filter-title">News archive</p>
                        <ul class="filters-list filters-outer-list" id="uitest-news-archive">
                            <li class=@(Model.FilteredUrl.HasNoDateFilter() ? "active" : "")>
                                <a href="@Url.RouteUrl(Model.FilteredUrl.WithoutDateFilter())">All recent news</a>
                            </li>
                            @foreach (var year in newsroom.Dates.Select(s => s.Year).Distinct().OrderByDescending(y => y))
                            {
                                <li class="collapsible">
                                    <p class="filter-inner-title">@year.ToString()</p>
                                    <ul class="filters-list filters-inner-list" id="news-archive">
                                        @foreach (var date in newsroom.Dates.Where(d => d.Year == year).OrderBy(a => a).Reverse())
                                        {
                                            <li class=@(Model.DateRange != "customdate" && Model.DateFrom == date ? "active" : "")>
                                                <a href="@Url.RouteUrl(Model.FilteredUrl.AddMonthFilter(date))">@date.ToString("MMMM yyyy")</a>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                            @{
                                <li id="custom-filter-li" class="@(Model.DateRange == "customdate" ? "customdateactive" : "") filter collapsible">
                                    <a class="filter-title custom-date-title">Custom date</a>
                                    <ul class="filters-list custom-date">
                                        <li class="@(Model.DateRange == "customdate" ? "active" : "")">
                                            <form action="@Url.Action("Index", "News")" method="get">
                                                <input type="hidden" name="DateRange" value="customdate" />
                                                @if (!string.IsNullOrEmpty(Model.Category))
                                                {
                                                    <input type="hidden" name="Category" value="@Model.Category" />
                                                }
                                                <div class="date-from">
                                                    <label asp-for="@Model.DateFrom"></label>
                                                    <input class="datepicker" type="date" asp-for="@Model.DateFrom" />
                                                    <span asp-validation-for="@Model.DateFrom" class="form-customdate-validation-error form-field-validation-error"></span>
                                                </div>
                                                <div class="date-to">
                                                    <label asp-for="@Model.DateTo"></label>
                                                    <input class="datepicker" type="date" asp-for="@Model.DateTo" />
                                                    <span id="inputvalidation" asp-validation-for="@Model.DateTo" class="form-customdate-validation-error form-field-validation-error"></span>
                                                </div>
                                                <div class="update-button">
                                                    <stock-button class="button-customdate">Update</stock-button>
                                                </div>
                                            </form>
                                        </li>
                                    </ul>
                                </li>
                            }
                        </ul>
                    </li>
                </ul>
                <p class="mobile-filter-heading filter-title">Filter news</p>
  
    </div>
    <div class="grid-70 tablet-grid-100 mobile-grid-100 news-article-grid">
        @{
            if (newsroom.Alerts != null)
            {
                foreach (var alert in newsroom.Alerts)
                {
                    @Html.Partial("DisplayTemplates/Alert", alert)
                }
            }
        }
        @if (!newsroom.News.Any())
        {
            <div class="grid-100 news-article-not-found">
                <h2>No news articles found.</h2>
            </div>
        }
        else
        {
            <ul class="nav-card-news-list grid-100">
                @foreach (var subItem in newsroom.News)
                {
                    <li class="grid-100 grid-parent nav-card-news nav-card-news-item">
                        <a href="@Url.Action("Detail", "News", new {slug = subItem.Slug})">
                            <div class="news-bottom-border grid-100 grid-parent">
                                @if (!string.IsNullOrEmpty(subItem.ThumbnailImage))
                                {
                                    <div class="mobile-grid-35 tablet-grid-30 grid-30 grid-parent nav-card-news-thumbnail nav-card-news-thumbnail-background-image tablet-push-70 push-70" style="background-image: url(@subItem.ThumbnailImage);"></div>
                                }
                                <div class="@(!string.IsNullOrEmpty(subItem.ThumbnailImage) ? "mobile-grid-65 tablet-grid-70 nav-card-news-detail pull-30 tablet-pull-30" : "") grid-70 grid-parent">
                                    <div class="news-date hide-on-mobile">
                                        <i class="fa fa-clock-o"></i>@Html.Partial("FormattedDate", subItem.SunriseDate)
                                    </div>

                                    <h2 class="nav-card-news-title" style="margin: 0">@subItem.Title</h2>

                                    <p class="nav-card-news-teaser hide-on-mobile">@subItem.Teaser</p>
                                    <div class="news-date hide-on-desktop hide-on-tablet">
                                        <i class="fa fa-clock-o"></i>@Html.Partial("FormattedDate", subItem.SunriseDate)
                                    </div>
                                </div>
                            </div>
                        </a>
                    </li>
                }
            </ul>

            @Html.Partial("Pagination", Model.Pagination)    
        }
    </div>
    
</div>