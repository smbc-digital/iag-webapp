@using System.Threading.Tasks
@using Microsoft.AspNetCore.Routing
@using StockportWebapp.Utils
@model StockportWebapp.Models.NewsroomViewModel

@{ 
    var newsroom = Model.Newsroom;
    var currentUrl = new QueryUrl(Url.ActionContext.RouteData.Values, Context.Request.Query);
    var newsFilter = new NewsFilter(currentUrl);
}

<div class="grid-container news-grid-container-margins">
    <div class="grid-30 tablet-grid-100 mobile-grid-100 l-news-filter">
        <p class="filters-heading">Refine by</p>     
        <ul class="filters-list" id="category-list">           
            <li class="collapsible">
                <ul class="filters-list">
                    <li class="filter collapsible" id="category-filter">
                        <p class="filter-title">Category</p>
                        <ul class="filters-list">
                            <li class=@(!currentUrl.HasQueryParam("category") ? "active" : "")>
                                <a href="@Url.RouteUrl(newsFilter.WithoutCategory())">All categories</a>
                            </li>
                            @foreach (var category in Model.Categories)
                            {
                                <li class=@(currentUrl.MatchesQueryParam("category", category) ? "active" : "")>
                                    <a href="@Url.RouteUrl(newsFilter.AddCategoryFilter(category))">@category</a>
                                </li>
                            }
                        </ul>
                    </li> 
                    <li class="filter collapsible">
                        <p class="filter-title">News archive</p>
                        <ul class="filters-list filters-outer-list">
                            <li class=@(!currentUrl.HasQueryParam("datefrom") ? "active" : "")>
                                <a href="@Url.RouteUrl(newsFilter.WithoutDateFilter())">All recent news</a>
                            </li>
                            @foreach (var year in newsroom.Dates.Select(s => s.Year).Distinct().OrderByDescending(y => y))
                            {
                                <li class="collapsible">
                                    <p class="filter-inner-title">@year.ToString()</p>
                                    <ul class="filters-list filters-inner-list" id="news-archive">
                                        @foreach (var date in newsroom.Dates.Where(d => d.Year == year).OrderBy(a => a).Reverse())
                                        {
                                            <li class=@(currentUrl.MatchesQueryParam("datefrom", @date.ToString("yyyy-MM-dd")) ? "active" : "")>
                                                <a href="@Url.RouteUrl(newsFilter.AddMonthFilter(date))">@date.ToString("MMMM yyyy")</a>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                        </ul>
                    </li>                  
                </ul>
                <p class="mobile-filter-heading filter-title">Filter news</p>         
            </li>
        </ul>
    </div>
    <div class="grid-70 tablet-grid-100 mobile-grid-100 news-article-grid">
        @{
            if (newsroom.Alerts != null)
            {
                foreach (var alert in newsroom.Alerts)
                {
                    @Html.Partial("DisplayTemplates/Alert", alert)
                }
            }
        }
        @if (!newsroom.News.Any())
        {
            <div class="grid-100 news-article-not-found">
                <h2>No news articles found.</h2>
            </div>
        }
        else
        {
            <ul class="nav-card-news-list grid-100">
                @foreach (var subItem in newsroom.News)
                {
                    <li class="grid-100 grid-parent nav-card-news nav-card-news-item">
                        <div class="news-bottom-border grid-100 grid-parent">
                            @if (!string.IsNullOrEmpty(subItem.ThumbnailImage))
                            {
                                <div class="mobile-grid-35 tablet-grid-30 grid-30 grid-parent nav-card-news-thumbnail nav-card-news-thumbnail-background-image tablet-push-70 push-70" style="background-image: url(@subItem.ThumbnailImage);"></div>
                            }
                            <div class="@(!string.IsNullOrEmpty(subItem.ThumbnailImage) ? "mobile-grid-65 tablet-grid-70 nav-card-news-detail pull-30 tablet-pull-30" : "") grid-70 grid-parent">
                                <div class="news-date hide-on-mobile">
                                    <i class="fa fa-clock-o"></i>@Html.Partial("FormattedDate", subItem.SunriseDate)
                                </div>
                                <a href="@Url.Action("Detail", "News", new {slug = subItem.Slug})">
                                    <h2 class="nav-card-news-title" style="margin: 0">@subItem.Title</h2>
                                </a>
                                <p class="nav-card-news-teaser hide-on-mobile">@subItem.Teaser</p>
                                <div class="news-date hide-on-desktop hide-on-tablet">
                                    <i class="fa fa-clock-o"></i>@Html.Partial("FormattedDate", subItem.SunriseDate)
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
    </div>
</div>