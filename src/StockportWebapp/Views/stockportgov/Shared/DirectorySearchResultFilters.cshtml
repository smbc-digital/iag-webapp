@model StockportWebapp.ViewModels.DirectoryViewModel
<section class="navcard-wrapper">
    <div class="navcard navcard--white navcard--width-100 navcard--border navcard--no-padding-right-rtl">
        <div class="navcard-content navcard-all navcard--theme-grey-accent-all navcard--radius-all">
            <div class="navcard-content--padding">
                <h2 class="h-ml h--no-top-margin">Filter your results</h2>
                <p>Choose one or more options to filter your results.</p>

                <div class="directory-results__filters">
                    @if (Model.AllFilterThemes is not null && Model.AllFilterThemes.Any())
                    {
                        @foreach (var entry in Model.AllFilterThemes)
                        {
                            <a href="javascript:void(0)" aria-expanded="true" class="directory-results__collapsible">
                                <h3 id='directory-@entry.Title.ToLower().Replace(" ", "-")'>@entry.Title</h3>
                                <span class="directory-results__toggle @(Model.AllFilterThemes.First() != entry ? "closed" : string.Empty)"></span>
                            </a>

                            <div class="directory-filters__content" role="group" aria-labelledby='directory-@entry.Title.ToLower().Replace(" ", "-")'>
                                @foreach (var filter in entry.Filters)
                                {
                                    <div class="directory__checkbox-container">
                                        <input class="directory-filters__checkbox" type="checkbox" name="filters" value="@filter.Slug" id="@filter.Slug"
                                            @(Model.AppliedFilters.Any(appliedFilter => appliedFilter.Slug.Equals(filter.Slug)) ? "checked" : string.Empty)>

                                        <label for="@filter.Slug" class="directory-filters__label">@filter.DisplayName</label>
                                        <span class="directory-filters__count" aria-hidden="true">(@Model.FilterCounts.GetValueOrDefault(filter.Slug, 0))</span>


                                        <span class="visuallyhidden">
                                            @{
                                                var filterCount = Model.FilterCounts.GetValueOrDefault(filter.Slug, 0);
                                                var countValueForSR = filterCount.Equals(1) ? $"{filterCount} result" : $"{filterCount} results";
                                            }
                                            @countValueForSR
                                        </span>

                                        <br>
                                    </div>
                                }
                            </div>

                            <hr>
                        }

                         <noscript>
                            <button value="Apply filters" data-cy="apply-filters" class="btn btn--bold btn--full btn--margin-bottom" type="submit">Apply filters</button>
                        </noscript>
                    }

                    <a href="@Url.Action("DirectoryResults", "Directory", new { slug = Model.Slug })" data-cy="clear-filters" class="btn btn--inverse btn--full btn--bold btn--black-text btn--border-grey">Clear filters</a>
                </div>
            </div>
        </div>
    </div>
</section>