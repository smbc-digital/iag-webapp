@inject ViewHelpers viewHelper
@model EventCalendar
@{
    DateTime previousEnteredDate = DateTime.MinValue;
    bool hasEvents = Model.Events.Any();
}

<div class="grid-container" id="event-listing-container">
    @if (!hasEvents)
    {
        <div class="grid-container grid-100 no-results">
            <h1>There are currently no events matching your search.</h1>
            @if (Model.DateFrom.HasValue && Model.DateTo.HasValue && Model.DateFrom > Model.DateTo)
            {
                <p>This is because you searched for an invalid date range.</p>
            }

            <p>Please edit your search and try again.</p>
        </div>
    }

    @foreach (Event eventItem in Model.Events)
    {
        string start = string.Empty;
        string end = string.Empty;
        if (!previousEnteredDate.Equals(eventItem.EventDate))
        {
            if (!previousEnteredDate.Equals(DateTime.MinValue))
            {
                end = "</div>";
            }

            <h2>@viewHelper.FormatEventDate(eventItem.EventDate)</h2>
            start = "<div class=\"event-container-row matchbox-parent\">";
        }

        @Html.Raw(end);
        @Html.Raw(start);

        <partial name="Events/EventCard" model='eventItem'/>

        previousEnteredDate = eventItem.EventDate.Date;
    }
    
    @if (hasEvents)
    {
        @Html.Raw("</div>")
        <partial name="Pagination" model='Model.Pagination'/>
    }
</div>