@model DirectoryViewModel
@{
    string sectionMarginBottom = string.Empty;
    string sectionMarginTop = string.Empty;
    string navcardPaddingClasses = Model.DisplayIcons
                ? "navcard--no-padding-top"
                : string.Empty;

    if ((Model.ExternalLinks is not null && Model.ExternalLinks.Any()) 
        || (Model.RelatedContent is not null && Model.RelatedContent.Any()))
        sectionMarginBottom = "section--margin-bottom section--margin-bottom-1";

    if ((string.IsNullOrEmpty(Model.Body) && Model.CallToAction is null) || 
        !string.IsNullOrEmpty(Model.Body))
        sectionMarginTop = "section--margin-top-1";
}

<section class="section section--no-margin @sectionMarginTop @sectionMarginBottom">
    <div class="grid-container">
        <div class="grid-100">
            <div class="section__content section__content--no-margin">
                <ul class="navcard-wrapper navcard-wrapper--no-margin" data-cy="navcard">
                    @foreach (var subitem in Model.PrimaryItems.Items)
                    {
                        <partial name="DirectoryNavCard" model='subitem' view-data='@(new ViewDataDictionary(ViewData) { { "DisplayIcons", @Model.DisplayIcons  }, {"IsRootDirectory", Model.IsRootDirectory}, { "AlternativeColourScheme", Model.InheritedColourScheme }, {"NavcardPaddingClasses", navcardPaddingClasses} })' />
                    }

                    <partial name="DirectoryNavCardViewAll" view-data='@(new ViewDataDictionary(ViewData) { { "DisplayIcons", @Model.DisplayIcons  }, {"IsRootDirectory", Model.IsRootDirectory}, { "ColourScheme", Model.InheritedColourScheme }, {"NavcardPaddingClasses", navcardPaddingClasses} })' />
                </ul>
            </div>
        </div>
    </div>
</section>