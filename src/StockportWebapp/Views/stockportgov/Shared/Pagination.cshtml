@model Pagination

<div class="pagination-section grid-parent pagination-margin-bottom">
    @{
        IUrlHelperWrapper urlHelper = new UrlHelperWrapper(Url);
        var indexOfFirstItemOnPage = PaginationHelper.CalculateIndexOfFirstItemOnPage(Model.CurrentPageNumber, Model.MaxItemsPerPage);
        var indexOfLastItemOnPage = PaginationHelper.CalculateIndexOfLastItemOnPage(Model.CurrentPageNumber, Model.TotalItemsOnPage, Model.MaxItemsPerPage);
        var pageSize = PaginationHelper.GetOtherPageSizeByCurrentPageSize(Model.MaxItemsPerPage, Model.TotalItems, Model.DefaultPageSize);
    }

    @if (Model.TotalItems > Model.DefaultPageSize)
    {
        <div class="grid-parent grid-50 mobile-grid-100 tablet-grid-50 page-size">
            <a href="@PaginationHelper.BuildPageSizeUrl(Model.DefaultPageSize, Model.MaxItemsPerPage, Model.TotalItems, Model.CurrentUrl, urlHelper)"> View @(pageSize == 60 && Model.TotalItems < 60 ? "all" : pageSize.ToString()) @Model.ItemDescription @(pageSize == 60 && Model.TotalItems < 60 ? string.Empty : "per page")</a>
        </div>
    }   

    <div class="grid-parent grid-@(Model.TotalItems > Model.DefaultPageSize ? "50" : "100") tablet-grid-@(Model.TotalItems > Model.DefaultPageSize ? "50" : "100") mobile-grid-100 pagination-display">Showing @indexOfFirstItemOnPage - @indexOfLastItemOnPage of @Model.TotalItems @Model.ItemDescription</div>
    
    <div class="grid-parent grid-100 tablet-grid-100 mobile-grid-100 pagination-page-numbers">
        @{
            if (PaginationHelper.ShowPreviousLink(Model.CurrentPageNumber))
            {
                var url = PaginationHelper.BuildUrl(Model.CurrentPageNumber - 1, Model.CurrentUrl, urlHelper);
                <a href="@url">Previous</a>
            }

            var visiblePageNumbers = PaginationHelper.GenerateVisiblePageNumbers(Model.CurrentPageNumber, Model.TotalPages);

            foreach (var visiblePageNumber in visiblePageNumbers)
            {
                if (visiblePageNumber.IsCurrentPage)
                {
                    <span>@visiblePageNumber.PageNumber.ToString()</span>
                }
                else
                {
                    var url = PaginationHelper.BuildUrl(visiblePageNumber.PageNumber, Model.CurrentUrl, urlHelper);
                    <a href="@url">@visiblePageNumber.PageNumber.ToString()</a>
                }
            }

            if (PaginationHelper.ShowNextLink(Model.CurrentPageNumber, Model.TotalPages))
            {
                var url = PaginationHelper.BuildUrl(Model.CurrentPageNumber + 1, Model.CurrentUrl, urlHelper);
                <a href="@url">Next</a>
            }            
        }
    </div>
</div>

