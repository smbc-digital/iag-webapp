@using StockportWebapp.Utils
@model StockportWebapp.Models.Pagination


<div class="pagination-section grid-parent">
    @{
        var paginationHelper = new PaginationHelper();
        var indexOfFirstItemOnPage = paginationHelper.CalculateIndexOfFirstItemOnPage(Model.Page, Model.PageSize);
        var indexOfLastItemOnPage = paginationHelper.CalculateIndexOfLastItemOnPage(Model.Page, Model.TotalItemsOnPage, Model.PageSize);
    }
    <div class="grid-50 tablet-grid-100 mobile-grid-100 pagination-display ">Showing @indexOfFirstItemOnPage - @indexOfLastItemOnPage of @Model.TotalItems @Model.DisplayName</div>
    <div class="grid-50 tablet-grid-100 mobile-grid-100 pagination-page-numbers">
        @{
            if (Model.Page > 1)
            {
                <a href="@Url.RouteUrl(Model.CurrentUrl.AddQueriesToUrl(new Dictionary<string, string> {{"Page", (Model.Page - 1).ToString()}}))">Previous</a>
            }

            // current page is 1+, current page num is less than or equal to last page, there's more than one page
            if (Model.Page >= 1 && Model.Page <= Model.TotalPages && Model.TotalPages > 1)
            {
                var firstVisiblePageNumber = Model.Page - 2;
                var lastVisiblePageNumber =  Model.Page + 2;

                // current page is 1 or 2
                if (Model.Page - 2 <= 0)
                {
                    firstVisiblePageNumber = 1;
                    lastVisiblePageNumber = 5;
                }

                // current page is penultimate or last page
                if (Model.Page + 2 > Model.TotalPages)
                {
                    firstVisiblePageNumber = Model.Page - 5;
                    lastVisiblePageNumber = Model.TotalPages;
                }

                for (int i = firstVisiblePageNumber; i <= lastVisiblePageNumber; i++)
                {
                    if (i > 0 && i <= Model.TotalPages)
                    {
                        if (i == Model.Page)
                        {
                            <span>@i.ToString()</span>
                        }
                        else
                        {
                            <a href="@Url.RouteUrl(Model.CurrentUrl.AddQueriesToUrl(new Dictionary<string, string> {{"Page", i.ToString()}}))">@i.ToString()</a>
                        }
                    }
                }
            }

            if (Model.Page < Model.TotalPages)
            {
                <a href="@Url.RouteUrl(Model.CurrentUrl.AddQueriesToUrl(new Dictionary<string, string> {{"Page", (Model.Page + 1).ToString()}}))">Next</a>
            }
        }
    </div>

</div>

