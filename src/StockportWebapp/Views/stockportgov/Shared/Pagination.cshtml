@using StockportWebapp.Models
@using StockportWebapp.Utils
@model StockportWebapp.Models.Pagination


<div class="pagination-section grid-parent">
    @{
        IUrlHelperWrapper urlHelper = new UrlHelperWrapper(Url);
        var indexOfFirstItemOnPage = PaginationHelper.CalculateIndexOfFirstItemOnPage(Model.CurrentPageNumber, Pagination.MaxItemsPerPage);
        var indexOfLastItemOnPage = PaginationHelper.CalculateIndexOfLastItemOnPage(Model.CurrentPageNumber, Model.TotalItemsOnPage, Pagination.MaxItemsPerPage);
    }
    <div class="grid-50 tablet-grid-100 mobile-grid-100 pagination-display ">Showing @indexOfFirstItemOnPage - @indexOfLastItemOnPage of @Model.TotalItems @Model.ItemDescription</div>
    <div class="grid-50 tablet-grid-100 mobile-grid-100 pagination-page-numbers">
        @{
            if (PaginationHelper.ShowPreviousLink(Model.CurrentPageNumber))
            {
                var url = PaginationHelper.BuildUrl(Model.CurrentPageNumber - 1, Model.CurrentUrl, urlHelper);
                <a href="@url">Previous</a>
            }

            var visiblePageNumbers = PaginationHelper.GenerateVisiblePageNumbers(Model.CurrentPageNumber, Model.TotalPages);

            foreach (var visiblePageNumber in visiblePageNumbers)
            {
                if (visiblePageNumber.IsCurrentPage)
                {
                    <span>@visiblePageNumber.PageNumber.ToString()</span>
                }
                else
                {
                    var url = PaginationHelper.BuildUrl(visiblePageNumber.PageNumber, Model.CurrentUrl, urlHelper);
                    <a href="@url">@visiblePageNumber.PageNumber.ToString()</a>
                }
            }

            if (PaginationHelper.ShowNextLink(Model.CurrentPageNumber, Model.TotalPages))
            {
                var url = PaginationHelper.BuildUrl(Model.CurrentPageNumber + 1, Model.CurrentUrl, urlHelper);
                <a href="@url">Next</a>
            }            
        }
    </div>

</div>

