@model ArticleViewModel
@{
    string borderGrey = " navcard--border-left-1 navcard--border-right-1 navcard--theme-grey-accent-all";
    string liClasses = "navcard navcard--grey navcard--no-margin navcard--no-padding-right-rtl navcard--width-100";
}

<nav aria-labelledby="navcard-title">
    <ul class="navcard navcard-wrapper--no-margin navcard--border-top-10 navcard--no-padding-right-rtl navcard--theme-teal-lighter-top navcard--width-100">
        <li class="@liClasses">
            <div class="@borderGrey">
                <div class="navcard--padding navcard--padding-top navcard--grey">
                    <h2 class="h-ml h--no-top-margin h--no-bottom-margin" id="navcard-title">Related content</h2>
                </div>
            </div>
        </li>

        @foreach (var item in Model.Article.RelatedContent)
        {
            <li class="@liClasses">
                <div class="@(item.Equals(Model.Article.RelatedContent.Last()) 
                    ? $"{borderGrey} navcard--border-bottom-1 navcard--radius-bottom-left navcard--radius-bottom-right" 
                    : borderGrey)">

                    <partial name="ArticleNavCard" model='item' view-data='item.Equals(Model.Article.RelatedContent.Last()) ? new ViewDataDictionary(ViewData) {{ "navcardPadding", " navcard--padding-bottom" }} : null' />
                </div>
            </li>
        }
    </ul>
</nav>