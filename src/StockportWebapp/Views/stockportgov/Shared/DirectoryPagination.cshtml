@model DirectoryViewModel
@{
    bool showPagination = Model.PaginationInfo.TotalEntries > Model.PaginationInfo.PageSize;
    var urlWithParams = $"?{string.Join("&", Model.QueryParameters.Select(q => $"{q.Name}={q.Value}"))}";
}

@if (showPagination)
{
    <div class="directory-pagination__count">
        <div class="grid-container">
            <div class="grid-100">
                <span>
                    Showing 
                    <span class="bold">@((Model.PaginationInfo.CurrentPage - 1) * Model.PaginationInfo.PageSize + 1)</span>
                    to
                    <span class="bold">@(Math.Min(Model.PaginationInfo.CurrentPage * Model.PaginationInfo.PageSize, Model.PaginationInfo.TotalEntries))</span>
                    of
                    <span class="bold">@Model.PaginationInfo.TotalEntries</span>
                    results
                </span>
            </div>
        </div>
    </div>

    <div class="grid-container">
        <div class="grid-100">
            <nav class="directory-pagination" aria-label="Pagination">
                <div class="directory-pagination__prev">
                    @if (Model.PaginationInfo.CurrentPage > 1)
                    {
                        <a href="@(urlWithParams)&page=@(Model.PaginationInfo.CurrentPage - 1)" class="directory-pagination__links">
                            <span class="directory-pagination__left"></span>
                            <span class="directory-pagination__right--rtl"></span>
                            Previous
                            <span class="visuallyhidden">page</span>
                        </a>
                    }
                </div>

                <ul class="directory-pagination__list">
                    <li class="directory-pagination__item">
                        @{
                            string ariaCurrent = Model.PaginationInfo.CurrentPage == 1 ? "aria-current=page" : string.Empty;
                        }
                        <a href="@(urlWithParams)&page=1" class="@(Model.PaginationInfo.CurrentPage == 1 ? "directory-pagination__current" : "directory-pagination__number")"
                            aria-label="Page 1" @ariaCurrent>1</a>
                    </li>

                    @if (Model.PaginationInfo.CurrentPage > 4 && Model.PaginationInfo.TotalPages > 7)
                    {
                        <li class="directory-pagination__item directory-pagination__ellipses">...</li>
                    }

                    @if (Model.PaginationInfo.TotalPages <= 7)
                    {
                        @for (int i = 2; i <= Math.Min(Model.PaginationInfo.TotalPages - 1, 7); i++)
                        {
                            string ariaCurrentAttr = Model.PaginationInfo.CurrentPage == i ? "aria-current=page" : string.Empty;

                            <li class="directory-pagination__item">
                                <a href="@(urlWithParams)&page=@i" class="@(i == Model.PaginationInfo.CurrentPage ? "directory-pagination__current" : "directory-pagination__number")"
                                    @ariaCurrentAttr aria-label="Page @i">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        @if(Model.PaginationInfo.CurrentPage == 4){
                            @for (int i = Math.Max(2, Model.PaginationInfo.CurrentPage - 2); i <= Math.Min(Model.PaginationInfo.TotalPages - 1, Model.PaginationInfo.CurrentPage + 1); i++)
                            {
                                string ariaCurrentAttr = Model.PaginationInfo.CurrentPage == i ? "aria-current=page" : string.Empty;

                                <li class="directory-pagination__item">
                                    <a href="@(urlWithParams)&page=@i" class="@(i == Model.PaginationInfo.CurrentPage ? "directory-pagination__current" : "directory-pagination__number")"
                                        @ariaCurrentAttr aria-label="Page @i">@i</a>
                                </li>
                            }
                        }
                        else{
                            @for (int i = Math.Max(2, Model.PaginationInfo.CurrentPage - 1); i <= Math.Min(Model.PaginationInfo.TotalPages - 1, Model.PaginationInfo.CurrentPage + 1); i++)
                            {
                                string ariaCurrentAttr = Model.PaginationInfo.CurrentPage == i ? "aria-current=page" : string.Empty;

                                <li class="directory-pagination__item">
                                    <a href="@(urlWithParams)&page=@i" class="@(i == Model.PaginationInfo.CurrentPage ? "directory-pagination__current" : "directory-pagination__number")"
                                        @ariaCurrentAttr aria-label="Page @i">@i</a>
                                </li>
                            }
                        }

                        @if (Model.PaginationInfo.TotalPages - Model.PaginationInfo.CurrentPage > 2)
                        {
                            <li class="directory-pagination__item directory-pagination__ellipses">...</li>
                        }
                    }

                    <li class="directory-pagination__item">
                        @{
                            string ariaCurrentAttribute = Model.PaginationInfo.CurrentPage == Model.PaginationInfo.TotalPages ? "aria-current=page" : string.Empty;
                        }
                        <a href="@(urlWithParams)&page=@Model.PaginationInfo.TotalPages" class="@(Model.PaginationInfo.CurrentPage == Model.PaginationInfo.TotalPages ? "directory-pagination__current" : "directory-pagination__number")"
                            @ariaCurrentAttribute aria-label="Page @Model.PaginationInfo.TotalPages">@Model.PaginationInfo.TotalPages</a>
                    </li>
                </ul>

                <div class="directory-pagination__next">
                    @if (Model.PaginationInfo.CurrentPage < Model.PaginationInfo.TotalPages)
                    {
                        <a href="@(urlWithParams)&page=@(Model.PaginationInfo.CurrentPage + 1)" class="directory-pagination__links">
                            Next
                            <span class="visuallyhidden">page</span>
                            <span class="directory-pagination__left--rtl"></span>
                            <span class="directory-pagination__right"></span>
                        </a>
                    }
                </div>
            </nav>
        </div>
    </div>
}