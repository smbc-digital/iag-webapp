@model DirectoryViewModel
@{
    bool showPagination = Model.PaginationInfo.TotalEntries > Model.PaginationInfo.PageSize;
    var filterSlug = Model.AppliedFilters is not null && Model.AppliedFilters.Any() 
                        ? $"&filters={string.Join("&filters=", Model.AppliedFilters.Select(_ => _.Slug))}" 
                        : string.Empty;
}

<div class="pagination__count">
    <div class="grid-container">
        <div class="grid-100">
            @if (showPagination)
            {
                <span>
                    Showing 
                    <span class="bold">@((Model.PaginationInfo.CurrentPage - 1) * Model.PaginationInfo.PageSize + 1)</span>
                    to
                    <span class="bold">@(Math.Min(Model.PaginationInfo.CurrentPage * Model.PaginationInfo.PageSize, Model.PaginationInfo.TotalEntries))</span>
                    of
                    <span class="bold">@Model.PaginationInfo.TotalEntries</span>
                    results
                </span>
            }
        </div>
    </div>
</div>

<nav class="directory-pagination">
    <div class="grid-container">
        <div class="grid-100">
            @if (showPagination)
            {
                <div class="pagination">
                    <ul class="pagination__list">
                        <!-- Display Previous if not on first page -->
                        @if (Model.PaginationInfo.CurrentPage > 1)
                        {
                            <li class="pagination__item">
                                <a href="?page=@(Model.PaginationInfo.CurrentPage - 1)" class="pagination__links">
                                    <span class="pagination__left"></span>
                                    Previous
                                    <span class="pagination__left--rtl"></span>
                                </a>
                            </li>
                        }

                        <!-- Always display the first page -->
                        <li class="pagination__item">
                            <a href="?page=1" class="@(Model.PaginationInfo.CurrentPage == 1 ? "pagination__current" : "pagination__number")">1</a>
                        </li>

                        <!-- Display ellipsis before the second page if necessary -->
                        @if (Model.PaginationInfo.CurrentPage > 4 && Model.PaginationInfo.TotalPages > 7)
                        {
                            <li class="pagination__item">...</li>
                        }

                        <!-- Display page numbers for smaller number of pages or specific range -->
                        @if (Model.PaginationInfo.TotalPages <= 7)
                        {
                            @for (int i = 2; i <= Math.Min(Model.PaginationInfo.TotalPages - 1, 7); i++)
                            {
                                <li class="pagination__item">
                                    <a href="?page=@i" class="@(i == Model.PaginationInfo.CurrentPage ? "pagination__current" : "pagination__number") test">@i</a>
                                </li>
                            }
                        }
                        else
                        {
                            <!-- Display page numbers with ellipses for larger number of pages -->
                            @for (int i = Math.Max(2, Model.PaginationInfo.CurrentPage - 1); i <= Math.Min(Model.PaginationInfo.TotalPages - 1, Model.PaginationInfo.CurrentPage + 1); i++)
                            {
                                <li class="pagination__item">
                                    <a href="?page=@i" class="@(i == Model.PaginationInfo.CurrentPage ? "pagination__current" : "pagination__number")">@i</a>
                                </li>
                            }

                            <!-- Display ellipsis after the penultimate page if necessary -->
                            @if (Model.PaginationInfo.TotalPages - Model.PaginationInfo.CurrentPage > 3)
                            {
                                <li class="pagination__item">...</li>
                            }
                        }

                        <!-- Always display the last page -->
                        <li class="pagination__item">
                            <a href="?page=@Model.PaginationInfo.TotalPages" class="@(Model.PaginationInfo.CurrentPage == Model.PaginationInfo.TotalPages ? "pagination__current" : "pagination__number")">@Model.PaginationInfo.TotalPages</a>
                        </li>

                        <!-- Display Next if not on last page -->
                        @if (Model.PaginationInfo.CurrentPage < Model.PaginationInfo.TotalPages)
                        {
                            <li class="pagination__item">
                                <a href="?page=@(Model.PaginationInfo.CurrentPage + 1)" class="pagination__links">
                                    <span class="pagination__right--rtl"></span>
                                    Next
                                    <span class="pagination__right"></span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
            
        </div>
    </div>
</nav>