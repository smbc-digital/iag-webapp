@model StockportWebapp.QuestionBuilder.Entities.Question

@{
    var limitValue = @Model.ValidatorData.Any(_ => _.Type == "max-length") ? @Model.ValidatorData.FirstOrDefault(_ => _.Type == "max-length").Value : "60";
}

    <div class="form-section question-section">
        @{
            if (Model.ValidatorData.Count == 0)
            {
                <h2 class="h3 optional">@Model.Label</h2>
                <p class="optional">(optional)</p>
            }

            var itemEmail = Model.ValidatorData.Where(x => x.Type == "email");
            var itemEmailOptional = Model.ValidatorData.Where(x => x.Type == "optional-email");

            if (Model.ValidatorData.Count > 0)
            {

                if (Model.ValidatorData.Count == 1 && itemEmailOptional.Count().Equals(1))
                {
                    <h2 class="h3 optional">@Model.Label</h2>
                    <p class="optional">(optional)</p>
                }
                else
                {
                    if (!string.IsNullOrEmpty(@Model.Label))
                    {
                        <h2 class="h3">@Model.Label</h2>
                    }
                }
            }
        }
        @{
            if (!string.IsNullOrEmpty(Model.TextSubLabel))
            {
                <span style="font-size:15px; color:dimgrey;">@Model.TextSubLabel</span>
            }
        }

        @{
            if (itemEmailOptional.Count().Equals(1) || itemEmail.Count().Equals(1))
            {
                @Html.TextBox("Response", "", new { @class = "email-smart-answers",  style = "width:100%;", data_questionid = Model.QuestionId, aria_labelledby = @Model.QuestionId, id = string.Concat(@Model.QuestionId).Replace(" ", "-") })
            }
            else
            {
                @Html.TextBox("Response", "", new { @class = "", data_questionid = Model.QuestionId, aria_labelledby = @Model.QuestionId, id = string.Concat(@Model.QuestionId).Replace(" ", "-") })
            }

            <partial name="_ValidationError.cshtml" model='Model' />
        }
    </div>

<script type="text/javascript">
    require(['startup', 'text-limiter', 'jquery.steps', 'utils', 'unobtrusive'],
        function (startup, textLimiter) {
            startup.Init();
            textLimiter.restrictLength(@Model.QuestionId, @limitValue);
        })
</script>