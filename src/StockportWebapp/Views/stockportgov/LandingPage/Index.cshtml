@model LandingPageViewModel
@{
    LandingPage landingPage = Model.LandingPage;
    ViewData["Title"] = landingPage.Title;
    ViewData["Description"] = landingPage.MetaDescription;
    ViewData["og:title"] = landingPage.Title;
    Layout = "../Shared/_Layout2023.cshtml";
    string backgroundColour = Model.LandingPage.HeaderType.Equals("Framed Image") ? $"directories-breadcrumb-container-{CssClassMapper.GetCssClass(landingPage.HeaderColourScheme)}" : "topic-breadcrumb-container";
}

<div class="grid-container-full-width" style="background-color:white;" data-cy="landing-page">
    <partial name="GlobalAlerts" model='Model.LandingPage.Alerts' />
    <partial name="Breadcrumb2023" model='Model.LandingPage.Breadcrumbs' view-data='@(new ViewDataDictionary(ViewData) {{"backgroundColour", backgroundColour}, {"landingBreadcrumb", "landing-breadcrumb-container"}})'/>

    @if(Model.LandingPage.HeaderType.Equals("Framed Image"))
    {
        <partial name="FramedImageHeader" model="@Model" />
    }
    else
    {
        <partial name="FullImageHeader" model="@Model" />
    }

    @foreach (ContentBlock pageSection in Model.LandingPage.PageSections)
    {
        <partial name="@pageSection.ContentType" model="@(pageSection.ContentType.Equals("CallToAction") 
            ? new CallToActionBanner() {
                    Image = pageSection.SubItems.FirstOrDefault().Image,
                    AltText = pageSection.SubItems.FirstOrDefault().Title,
                    ButtonText = pageSection.SubItems.FirstOrDefault().ButtonText,
                    Colour = pageSection.ColourScheme,
                    Link = pageSection.SubItems.FirstOrDefault().Link,
                    Teaser = pageSection.SubItems.FirstOrDefault().Teaser,
                    Title = pageSection.SubItems.FirstOrDefault().Title }
            : pageSection)" />
    }
</div>