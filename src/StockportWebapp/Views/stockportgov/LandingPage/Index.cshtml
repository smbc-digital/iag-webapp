@model LandingPageViewModel
@{
    LandingPage landingPage = Model.LandingPage;
    ViewData["Title"] = landingPage.Title;
    ViewData["Description"] = landingPage.MetaDescription;
    ViewData["og:title"] = landingPage.Title;
    Layout = "../Shared/_Layout2023.cshtml";
    string backgroundColour = Model.LandingPage.HeaderType.Equals("Framed Image") ? $"directories-breadcrumb-container-{CssClassMapper.GetCssClass(landingPage.HeaderColourScheme)}" : "topic-breadcrumb-container";
}

<div class="grid-container-full-width" style="background-color:white;" data-cy="landing-page">
    <partial name="GlobalAlerts" model='Model.LandingPage.Alerts' />
    <partial name="Breadcrumb2023" model='Model.LandingPage.Breadcrumbs' view-data='@(new ViewDataDictionary(ViewData) {{"backgroundColour", backgroundColour}, {"landingBreadcrumb", "landing-breadcrumb-container"}})'/>

    @if(Model.LandingPage.HeaderType.Equals("Full Image"))
    {
        <partial name="FullImageHeader" model="@Model" />
    }
    else
    {
        <partial name="FramedImageHeader" model="@Model" />
    }

    @foreach(var contentBlock in Model.LandingPage.ContentBlocks)
    {
        if(contentBlock.ContentType.Equals("CallToAction"))
        {
            <partial name="CallToActionBanner" model="@contentBlock.SubItems.FirstOrDefault()" />
        }
        else
        {
            <partial name="@contentBlock.ContentType" model="@contentBlock" />
        }
    }
</div>