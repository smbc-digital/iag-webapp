@using StockportWebapp.Models;
@using StockportWebapp.ViewModels
@model StockportWebapp.ViewModels.TopicViewModel
@{
    var topic = Model.Topic;
    var callToAction = topic.CallToAction;
    ViewData["Title"] = topic.Name;
    Layout = "../Shared/_Layout.cshtml";
    ViewData["Description"] = topic.Teaser;
    ViewData["og:title"] = topic.Name;
}

@if (!string.IsNullOrEmpty(Model.Topic.CampaignBanner.Image))
{
    @section BackgroundImage
    {
    <partial name="ScaleImageByDevice" model='new Image("l-background-hs-image", Model.Topic.CampaignBanner.Image)' />
    }
}
else
{
    @section BackgroundImage
    {
    <partial name="ScaleImageByDevice" model='new Image("l-background-hs-image", Model.Topic.BackgroundImage)' />
    }
}

@section Breadcrumbs
    {
    <partial name="Breadcrumb" model='Model.Topic.Breadcrumbs' />
}

    @if (!string.IsNullOrEmpty(topic.CampaignBanner.Image))
{
    <div role="banner" class="l-background-hs-image">
        <partial name="CampaignBanner" model='Model.Topic.CampaignBanner' />
    </div>
}
else if (!string.IsNullOrEmpty(topic.BackgroundImage))
{
    <div class="grid-100 l-background-hs-image"></div>
}

<section aria-label="@Model.Topic.Name content" class="grid-100 mobile-grid-100 topic-container">
    <div class="grid-100 topic-container-holder">
        <div tabindex="-1" id="content" class="topic-container-holder-alert">
            @if (topic.Alerts is not null)
            {
                foreach (var alert in topic.Alerts)
                {
                    <partial name="DisplayTemplates/Alert" model='alert' />
                }
            }
        </div>

        <div class="topic-container-holder-item">
            <h1>@topic.Name</h1>
            <hr>
            @Html.Raw(topic.Summary)
        </div>

        <ul class="article-list article-list-container grid-100 matchbox-parent">
            @if (topic.SubItems.Any())
            {
                bool displayImages = topic.SubItems.All(item => !string.IsNullOrEmpty(item.Image));
                foreach (var item in topic.SubItems)
                {
                    <partial name="SubItem-List" model="new Tuple<SubItem, bool>(item, displayImages)" />
                }
            }
        </ul>

        <ul class="article-list article-list-container grid-100 topic-secondary">
            @if (topic.SecondaryItems.Any())
            {
                int itemLength = topic.SecondaryItems.Count();
                foreach (var item in topic.SecondaryItems.Select((value, index) => new { index, value }))
                {
                    ViewData["IsLast"] = item.index.Equals(itemLength - 1);
                    <partial name="SecondaryItem" model="item.value" />
                }
            }
        </ul>

    </div>

    @if (Model.EventsFromApi != null && Model.EventsFromApi.Any())
        @if (!string.IsNullOrEmpty(Model.Topic.Tag))
        {
            <div class="grid-100 topic-container-holder">
                <div class="topic-container-holder-item">
                    <h1>Things to do</h1>
                    <hr>
                </div>
            </div>

            <section aria-label="Healthy Stockport" class="grid-100 mobile-grid-100 feature feature-container" id="event-listing-container">
                <div class="grid-100 event-container-row matchbox-parent">
                    @{
                        int count = 0;
                    }
                    @foreach (var item in Model.EventsFromApi)
                    {
                        count++;
                        <div @(count == 3 ? "class=hide-on-tablet" : "")>

                            <partial name="EventCard" model='item' />
                        </div>
                    }
                </div>
            </section>
        }    

    @if (topic.DisplayContactUs)
    {
        <div class="grid-100 topic-contactus">
            <div class="topic-contactus-container">

                <partial name="../Shared/ContactUs-Nav" />
            </div>
        </div>
    }

    @if (callToAction is not null)
    {
        <div class="topic-container-holder">
            <div class="call-to-action">
                <h2>TESTING CALL TO ACTION</h2>
                <p>@callToAction.Title</p>
                <p>@callToAction.Text</p>
                <a class="call-to-action__link" href=@callToAction.Link.Url>
                    @(callToAction.Link.Text ?? callToAction.Link.Url)
                </a>
            </div>
        </div>
    }

</section>
