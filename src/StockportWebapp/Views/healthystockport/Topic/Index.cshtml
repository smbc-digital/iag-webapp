@model TopicViewModel
@{
    var topic = Model.Topic;
    var callToAction = topic.CallToActionBanner;
    ViewData["Title"] = topic.Name;
    Layout = "../Shared/_Layout.cshtml";
    ViewData["Description"] = topic.Teaser;
    ViewData["og:title"] = topic.Name;
}

@if (!string.IsNullOrEmpty(Model.Topic.CampaignBanner.Image))
{
    @section BackgroundImage
    {
    <partial name="ScaleImageByDevice" model='new Image("l-background-hs-image", Model.Topic.CampaignBanner.Image)' />
    }
}
else
{
    @section BackgroundImage
    {
    <partial name="ScaleImageByDevice" model='new Image("l-background-hs-image", Model.Topic.BackgroundImage)' />
    }
}

@section Breadcrumbs
    {
    <partial name="Breadcrumb" model='Model.Topic.Breadcrumbs' />
}

    @if (!string.IsNullOrEmpty(topic.CampaignBanner.Image))
{
    <div role="banner" class="l-background-hs-image">
        <partial name="CampaignBanner" model='Model.Topic.CampaignBanner' />
    </div>
}
else if (!string.IsNullOrEmpty(topic.BackgroundImage))
{
    <div class="grid-100 l-background-hs-image"></div>
}

<article id="content" class="grid-100 mobile-grid-100 topic-container">
    <div class="grid-100 topic-container-holder">
        @if (topic.Alerts is not null)
        {
            <div class="topic-container-holder-alert">
                @foreach (var alert in topic.Alerts)
                {
                    <partial name="DisplayTemplates/Alert" model='alert' />
                }
            </div>
        }

        <div class="topic-container-holder-item">
            <h1>@topic.Name</h1>
            <hr>
            @Html.Raw(topic.Summary)
        </div>

        <partial name=@nameof(TriviaSection) model=topic.TriviaSection />

        @if (topic.SubItems.Any())
        {
            <ul class="article-list article-list-container grid-100 matchbox-parent">
                @{
                    bool displayImages = topic.SubItems.All(item => !string.IsNullOrEmpty(item.Image));
                    foreach (var item in topic.SubItems)
                    {
                        <partial name="SubItem-List" model="new Tuple<SubItem, bool>(item, displayImages)" />
                    }
                }
            </ul>
        }

        @if (topic.SecondaryItems.Any())
        {
            <ul class="article-list article-list-container grid-100 topic-secondary">
                @{
                    var itemLength = topic.SecondaryItems.Count();
                    foreach (var item in topic.SecondaryItems.Select((value, index) => new { index, value }))
                    {
                        ViewData["IsLast"] = item.index.Equals(itemLength - 1);
                        <partial name="SecondaryItem" model="item.value" />
                    }
                }
            </ul>
        }

        @if (Model.EventsFromApi is not null && Model.EventsFromApi.Any())
        {
            <div class="topic-container-holder-item">
                <h2>Things to do</h2>
                <hr>
            </div>
            <div id="event-listing-container" class="grid-100 event-container-row matchbox-parent" style="padding:0;">
                @foreach (var item in Model.EventsFromApi)
                {
                    <div @(item.Equals(Model.EventsFromApi.Last()) ? "class=hide-on-tablet" : "")>
                        <partial name=EventCard model=item />
                    </div>
                }
            </div>
            <div class="grid-100 events-call-to-action">
                <a class="button button-outline button-partialrounded button-call-to-action" href="/events/category/@Model.Topic.EventCategory">
                    Find more things to do
                </a>
            </div>
        }

        <partial name=@nameof(Video) model=Model.Topic.Video />

        <partial name=@nameof(CallToAction) model=callToAction />

        @if (topic.DisplayContactUs)
        {
            <div class="grid-100 topic-contactus">
                <div class="topic-contactus-container">
                    <partial name="../Shared/ContactUs-Nav" />
                </div>
            </div>
        }

    </div>
</article>
